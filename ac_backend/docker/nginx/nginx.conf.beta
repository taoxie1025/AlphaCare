events {}
http {
    include    conf/mime.types;

    upstream user_registry_service {
        server localhost:50051 fail_timeout=6s max_fails=10;
    }

    upstream config_registry_service {
        server localhost:50052 fail_timeout=6s max_fails=10;
    }

    upstream patient_registry_service {
        server localhost:50053 fail_timeout=6s max_fails=10;
    }

    upstream patient_visit_service {
        server localhost:50054 fail_timeout=6s max_fails=10;
    }

    upstream notification_service {
        server localhost:50055 fail_timeout=6s max_fails=10;
    }

    upstream secure_messaging_service {
        server localhost:50056 fail_timeout=6s max_fails=10;
    }

    upstream billing_service {
        server localhost:50057 fail_timeout=6s max_fails=10;
    }

    upstream prescription_service {
        server localhost:50058 fail_timeout=6s max_fails=10;
    }

    server {
        listen 80;
        listen 8088;
        listen 8080 http2;
        server_name openresty;

        location ~* /api.v1.UserRegistry/(LoginUser|CreateUser) {
            grpc_pass       grpc://user_registry_service;
            proxy_set_header Host $host;
            grpc_set_header  Content-Type application/grpc;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "*";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Transfer-Encoding,Custom-Header-1,X-Accept-Content-Transfer-Encoding,X-Accept-Response-Streaming,X-User-Agent,X-Grpc-Web';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Transfer-Encoding,Custom-Header-1,X-Accept-Content-Transfer-Encoding,X-Accept-Response-Streaming,X-User-Agent,X-Grpc-Web';
                add_header 'Access-Control-Expose-Headers' 'Content-Transfer-Encoding,Grpc-Message,Grpc-Status';
            }
        }

        location /api.v1.UserRegistry {
            access_by_lua_file /usr/local/openresty/lualib/resty/jwt-auth.lua;
            grpc_pass       grpc://user_registry_service;
            proxy_set_header Host $host;
            grpc_set_header  Content-Type application/grpc;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.ConfigRegistry {
            grpc_pass       grpc://config_registry_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.PatientRegistry {
            grpc_pass       grpc://patient_registry_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.PatientVisit {
            grpc_pass       grpc://patient_visit_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.Notification {
            grpc_pass       grpc://notification_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.SecureMessaging {
            grpc_pass       grpc://secure_messaging_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.Billing {
            grpc_pass       grpc://billing_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api.v1.Prescription {
            grpc_pass       grpc://prescription_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
          root   /usr/share/nginx/html;
          index  index.html;
          try_files $uri $uri/ /index.html;
        }
    }
}
