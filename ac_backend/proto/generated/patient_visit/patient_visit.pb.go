// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: patient_visit.proto

package patient_visit

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_ACTIVE   Status = 0
	Status_STATUS_INACTIVE Status = 1
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_ACTIVE",
		1: "STATUS_INACTIVE",
	}
	Status_value = map[string]int32{
		"STATUS_ACTIVE":   0,
		"STATUS_INACTIVE": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_patient_visit_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_patient_visit_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{0}
}

type PatientVisit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId       string           `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	ServiceProvider *ServiceProvider `protobuf:"bytes,3,opt,name=serviceProvider,proto3" json:"serviceProvider,omitempty"`
	ReasonForVisit  string           `protobuf:"bytes,4,opt,name=ReasonForVisit,proto3" json:"ReasonForVisit,omitempty"`
	Allergies       *Allergies       `protobuf:"bytes,5,opt,name=allergies,proto3" json:"allergies,omitempty"`
	Assessment      *Assessment      `protobuf:"bytes,6,opt,name=assessment,proto3" json:"assessment,omitempty"`
	ScheduledTests  *ScheduledTests  `protobuf:"bytes,7,opt,name=scheduledTests,proto3" json:"scheduledTests,omitempty"`
	VitalSigns      *VitalSigns      `protobuf:"bytes,8,opt,name=vitalSigns,proto3" json:"vitalSigns,omitempty"`
	HealthProblems  []*HealthProblem `protobuf:"bytes,9,rep,name=HealthProblems,proto3" json:"HealthProblems,omitempty"`
	VisitTime       int64            `protobuf:"varint,10,opt,name=visitTime,proto3" json:"visitTime,omitempty"`
}

func (x *PatientVisit) Reset() {
	*x = PatientVisit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientVisit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientVisit) ProtoMessage() {}

func (x *PatientVisit) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientVisit.ProtoReflect.Descriptor instead.
func (*PatientVisit) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{0}
}

func (x *PatientVisit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatientVisit) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *PatientVisit) GetServiceProvider() *ServiceProvider {
	if x != nil {
		return x.ServiceProvider
	}
	return nil
}

func (x *PatientVisit) GetReasonForVisit() string {
	if x != nil {
		return x.ReasonForVisit
	}
	return ""
}

func (x *PatientVisit) GetAllergies() *Allergies {
	if x != nil {
		return x.Allergies
	}
	return nil
}

func (x *PatientVisit) GetAssessment() *Assessment {
	if x != nil {
		return x.Assessment
	}
	return nil
}

func (x *PatientVisit) GetScheduledTests() *ScheduledTests {
	if x != nil {
		return x.ScheduledTests
	}
	return nil
}

func (x *PatientVisit) GetVitalSigns() *VitalSigns {
	if x != nil {
		return x.VitalSigns
	}
	return nil
}

func (x *PatientVisit) GetHealthProblems() []*HealthProblem {
	if x != nil {
		return x.HealthProblems
	}
	return nil
}

func (x *PatientVisit) GetVisitTime() int64 {
	if x != nil {
		return x.VisitTime
	}
	return 0
}

type AddPatientVisitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId       string           `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	ServiceProvider *ServiceProvider `protobuf:"bytes,3,opt,name=serviceProvider,proto3" json:"serviceProvider,omitempty"`
	ReasonForVisit  string           `protobuf:"bytes,4,opt,name=ReasonForVisit,proto3" json:"ReasonForVisit,omitempty"`
	Allergies       *Allergies       `protobuf:"bytes,5,opt,name=allergies,proto3" json:"allergies,omitempty"`
	Assessment      *Assessment      `protobuf:"bytes,6,opt,name=assessment,proto3" json:"assessment,omitempty"`
	ScheduledTests  *ScheduledTests  `protobuf:"bytes,7,opt,name=scheduledTests,proto3" json:"scheduledTests,omitempty"`
	VitalSigns      *VitalSigns      `protobuf:"bytes,8,opt,name=vitalSigns,proto3" json:"vitalSigns,omitempty"`
	HealthProblems  []*HealthProblem `protobuf:"bytes,9,rep,name=HealthProblems,proto3" json:"HealthProblems,omitempty"`
	VisitTime       int64            `protobuf:"varint,10,opt,name=visitTime,proto3" json:"visitTime,omitempty"`
}

func (x *AddPatientVisitRequest) Reset() {
	*x = AddPatientVisitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPatientVisitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPatientVisitRequest) ProtoMessage() {}

func (x *AddPatientVisitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPatientVisitRequest.ProtoReflect.Descriptor instead.
func (*AddPatientVisitRequest) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{1}
}

func (x *AddPatientVisitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddPatientVisitRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddPatientVisitRequest) GetServiceProvider() *ServiceProvider {
	if x != nil {
		return x.ServiceProvider
	}
	return nil
}

func (x *AddPatientVisitRequest) GetReasonForVisit() string {
	if x != nil {
		return x.ReasonForVisit
	}
	return ""
}

func (x *AddPatientVisitRequest) GetAllergies() *Allergies {
	if x != nil {
		return x.Allergies
	}
	return nil
}

func (x *AddPatientVisitRequest) GetAssessment() *Assessment {
	if x != nil {
		return x.Assessment
	}
	return nil
}

func (x *AddPatientVisitRequest) GetScheduledTests() *ScheduledTests {
	if x != nil {
		return x.ScheduledTests
	}
	return nil
}

func (x *AddPatientVisitRequest) GetVitalSigns() *VitalSigns {
	if x != nil {
		return x.VitalSigns
	}
	return nil
}

func (x *AddPatientVisitRequest) GetHealthProblems() []*HealthProblem {
	if x != nil {
		return x.HealthProblems
	}
	return nil
}

func (x *AddPatientVisitRequest) GetVisitTime() int64 {
	if x != nil {
		return x.VisitTime
	}
	return 0
}

type ServiceProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Type      string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ServiceProvider) Reset() {
	*x = ServiceProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProvider) ProtoMessage() {}

func (x *ServiceProvider) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProvider.ProtoReflect.Descriptor instead.
func (*ServiceProvider) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceProvider) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ServiceProvider) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ServiceProvider) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Allergies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allergies        string `protobuf:"bytes,1,opt,name=allergies,proto3" json:"allergies,omitempty"`
	AdverseReactions string `protobuf:"bytes,2,opt,name=adverseReactions,proto3" json:"adverseReactions,omitempty"`
	Alerts           string `protobuf:"bytes,3,opt,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *Allergies) Reset() {
	*x = Allergies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Allergies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Allergies) ProtoMessage() {}

func (x *Allergies) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Allergies.ProtoReflect.Descriptor instead.
func (*Allergies) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{3}
}

func (x *Allergies) GetAllergies() string {
	if x != nil {
		return x.Allergies
	}
	return ""
}

func (x *Allergies) GetAdverseReactions() string {
	if x != nil {
		return x.AdverseReactions
	}
	return ""
}

func (x *Allergies) GetAlerts() string {
	if x != nil {
		return x.Alerts
	}
	return ""
}

type Assessment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assessment string `protobuf:"bytes,1,opt,name=assessment,proto3" json:"assessment,omitempty"`
}

func (x *Assessment) Reset() {
	*x = Assessment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assessment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assessment) ProtoMessage() {}

func (x *Assessment) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assessment.ProtoReflect.Descriptor instead.
func (*Assessment) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{4}
}

func (x *Assessment) GetAssessment() string {
	if x != nil {
		return x.Assessment
	}
	return ""
}

type ScheduledTests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestName      string `protobuf:"bytes,1,opt,name=testName,proto3" json:"testName,omitempty"`
	ScheduledDate string `protobuf:"bytes,2,opt,name=scheduledDate,proto3" json:"scheduledDate,omitempty"`
}

func (x *ScheduledTests) Reset() {
	*x = ScheduledTests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTests) ProtoMessage() {}

func (x *ScheduledTests) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTests.ProtoReflect.Descriptor instead.
func (*ScheduledTests) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{5}
}

func (x *ScheduledTests) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *ScheduledTests) GetScheduledDate() string {
	if x != nil {
		return x.ScheduledDate
	}
	return ""
}

type VitalSigns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignName string `protobuf:"bytes,1,opt,name=signName,proto3" json:"signName,omitempty"`
}

func (x *VitalSigns) Reset() {
	*x = VitalSigns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VitalSigns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VitalSigns) ProtoMessage() {}

func (x *VitalSigns) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VitalSigns.ProtoReflect.Descriptor instead.
func (*VitalSigns) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{6}
}

func (x *VitalSigns) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

type HealthProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	Status    Status `protobuf:"varint,3,opt,name=status,proto3,enum=api.v1.Status" json:"status,omitempty"`
	Comment   string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *HealthProblem) Reset() {
	*x = HealthProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthProblem) ProtoMessage() {}

func (x *HealthProblem) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthProblem.ProtoReflect.Descriptor instead.
func (*HealthProblem) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{7}
}

func (x *HealthProblem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HealthProblem) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *HealthProblem) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_ACTIVE
}

func (x *HealthProblem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type AddPatientVisitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddPatientVisitResponse) Reset() {
	*x = AddPatientVisitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPatientVisitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPatientVisitResponse) ProtoMessage() {}

func (x *AddPatientVisitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPatientVisitResponse.ProtoReflect.Descriptor instead.
func (*AddPatientVisitResponse) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{8}
}

func (x *AddPatientVisitResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPatientVisitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisitId           string `protobuf:"bytes,1,opt,name=visitId,proto3" json:"visitId,omitempty"`
	PatientId         string `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	ServiceProviderId string `protobuf:"bytes,3,opt,name=serviceProviderId,proto3" json:"serviceProviderId,omitempty"`
	DateFrom          string `protobuf:"bytes,4,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo            string `protobuf:"bytes,5,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
}

func (x *GetPatientVisitsRequest) Reset() {
	*x = GetPatientVisitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientVisitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientVisitsRequest) ProtoMessage() {}

func (x *GetPatientVisitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientVisitsRequest.ProtoReflect.Descriptor instead.
func (*GetPatientVisitsRequest) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{9}
}

func (x *GetPatientVisitsRequest) GetVisitId() string {
	if x != nil {
		return x.VisitId
	}
	return ""
}

func (x *GetPatientVisitsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *GetPatientVisitsRequest) GetServiceProviderId() string {
	if x != nil {
		return x.ServiceProviderId
	}
	return ""
}

func (x *GetPatientVisitsRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *GetPatientVisitsRequest) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type GetPatientVisitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientVisits []*PatientVisit `protobuf:"bytes,1,rep,name=patientVisits,proto3" json:"patientVisits,omitempty"`
}

func (x *GetPatientVisitsResponse) Reset() {
	*x = GetPatientVisitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_patient_visit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPatientVisitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientVisitsResponse) ProtoMessage() {}

func (x *GetPatientVisitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_patient_visit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientVisitsResponse.ProtoReflect.Descriptor instead.
func (*GetPatientVisitsResponse) Descriptor() ([]byte, []int) {
	return file_patient_visit_proto_rawDescGZIP(), []int{10}
}

func (x *GetPatientVisitsResponse) GetPatientVisits() []*PatientVisit {
	if x != nil {
		return x.PatientVisits
	}
	return nil
}

var File_patient_visit_proto protoreflect.FileDescriptor

var file_patient_visit_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xdd, 0x03,
	0x0a, 0x0c, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x67, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x52, 0x09, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x0e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0a,
	0x76, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x52, 0x0a, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe7, 0x03,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c,
	0x6c, 0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x0a,
	0x76, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x65,
	0x72, 0x67, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67,
	0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x28, 0x0a, 0x0a, 0x56, 0x69, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xb3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x0d,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x2a, 0x30, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x32,
	0xc0, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x4f, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x63, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x42, 0x11, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x17, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_patient_visit_proto_rawDescOnce sync.Once
	file_patient_visit_proto_rawDescData = file_patient_visit_proto_rawDesc
)

func file_patient_visit_proto_rawDescGZIP() []byte {
	file_patient_visit_proto_rawDescOnce.Do(func() {
		file_patient_visit_proto_rawDescData = protoimpl.X.CompressGZIP(file_patient_visit_proto_rawDescData)
	})
	return file_patient_visit_proto_rawDescData
}

var file_patient_visit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_patient_visit_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_patient_visit_proto_goTypes = []interface{}{
	(Status)(0),                      // 0: api.v1.Status
	(*PatientVisit)(nil),             // 1: api.v1.PatientVisit
	(*AddPatientVisitRequest)(nil),   // 2: api.v1.AddPatientVisitRequest
	(*ServiceProvider)(nil),          // 3: api.v1.ServiceProvider
	(*Allergies)(nil),                // 4: api.v1.Allergies
	(*Assessment)(nil),               // 5: api.v1.Assessment
	(*ScheduledTests)(nil),           // 6: api.v1.ScheduledTests
	(*VitalSigns)(nil),               // 7: api.v1.VitalSigns
	(*HealthProblem)(nil),            // 8: api.v1.HealthProblem
	(*AddPatientVisitResponse)(nil),  // 9: api.v1.AddPatientVisitResponse
	(*GetPatientVisitsRequest)(nil),  // 10: api.v1.GetPatientVisitsRequest
	(*GetPatientVisitsResponse)(nil), // 11: api.v1.GetPatientVisitsResponse
}
var file_patient_visit_proto_depIdxs = []int32{
	3,  // 0: api.v1.PatientVisit.serviceProvider:type_name -> api.v1.ServiceProvider
	4,  // 1: api.v1.PatientVisit.allergies:type_name -> api.v1.Allergies
	5,  // 2: api.v1.PatientVisit.assessment:type_name -> api.v1.Assessment
	6,  // 3: api.v1.PatientVisit.scheduledTests:type_name -> api.v1.ScheduledTests
	7,  // 4: api.v1.PatientVisit.vitalSigns:type_name -> api.v1.VitalSigns
	8,  // 5: api.v1.PatientVisit.HealthProblems:type_name -> api.v1.HealthProblem
	3,  // 6: api.v1.AddPatientVisitRequest.serviceProvider:type_name -> api.v1.ServiceProvider
	4,  // 7: api.v1.AddPatientVisitRequest.allergies:type_name -> api.v1.Allergies
	5,  // 8: api.v1.AddPatientVisitRequest.assessment:type_name -> api.v1.Assessment
	6,  // 9: api.v1.AddPatientVisitRequest.scheduledTests:type_name -> api.v1.ScheduledTests
	7,  // 10: api.v1.AddPatientVisitRequest.vitalSigns:type_name -> api.v1.VitalSigns
	8,  // 11: api.v1.AddPatientVisitRequest.HealthProblems:type_name -> api.v1.HealthProblem
	0,  // 12: api.v1.HealthProblem.status:type_name -> api.v1.Status
	1,  // 13: api.v1.GetPatientVisitsResponse.patientVisits:type_name -> api.v1.PatientVisit
	2,  // 14: api.v1.PatientVisitService.AddPatientVisit:input_type -> api.v1.AddPatientVisitRequest
	10, // 15: api.v1.PatientVisitService.GetPatientVisits:input_type -> api.v1.GetPatientVisitsRequest
	9,  // 16: api.v1.PatientVisitService.AddPatientVisit:output_type -> api.v1.AddPatientVisitResponse
	11, // 17: api.v1.PatientVisitService.GetPatientVisits:output_type -> api.v1.GetPatientVisitsResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_patient_visit_proto_init() }
func file_patient_visit_proto_init() {
	if File_patient_visit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_patient_visit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientVisit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPatientVisitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Allergies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assessment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VitalSigns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPatientVisitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientVisitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_patient_visit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPatientVisitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_patient_visit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_patient_visit_proto_goTypes,
		DependencyIndexes: file_patient_visit_proto_depIdxs,
		EnumInfos:         file_patient_visit_proto_enumTypes,
		MessageInfos:      file_patient_visit_proto_msgTypes,
	}.Build()
	File_patient_visit_proto = out.File
	file_patient_visit_proto_rawDesc = nil
	file_patient_visit_proto_goTypes = nil
	file_patient_visit_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PatientVisitServiceClient is the client API for PatientVisitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PatientVisitServiceClient interface {
	AddPatientVisit(ctx context.Context, in *AddPatientVisitRequest, opts ...grpc.CallOption) (*AddPatientVisitResponse, error)
	GetPatientVisits(ctx context.Context, in *GetPatientVisitsRequest, opts ...grpc.CallOption) (*GetPatientVisitsResponse, error)
}

type patientVisitServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPatientVisitServiceClient(cc grpc.ClientConnInterface) PatientVisitServiceClient {
	return &patientVisitServiceClient{cc}
}

func (c *patientVisitServiceClient) AddPatientVisit(ctx context.Context, in *AddPatientVisitRequest, opts ...grpc.CallOption) (*AddPatientVisitResponse, error) {
	out := new(AddPatientVisitResponse)
	err := c.cc.Invoke(ctx, "/api.v1.PatientVisitService/AddPatientVisit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *patientVisitServiceClient) GetPatientVisits(ctx context.Context, in *GetPatientVisitsRequest, opts ...grpc.CallOption) (*GetPatientVisitsResponse, error) {
	out := new(GetPatientVisitsResponse)
	err := c.cc.Invoke(ctx, "/api.v1.PatientVisitService/GetPatientVisits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PatientVisitServiceServer is the server API for PatientVisitService service.
type PatientVisitServiceServer interface {
	AddPatientVisit(context.Context, *AddPatientVisitRequest) (*AddPatientVisitResponse, error)
	GetPatientVisits(context.Context, *GetPatientVisitsRequest) (*GetPatientVisitsResponse, error)
}

// UnimplementedPatientVisitServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPatientVisitServiceServer struct {
}

func (*UnimplementedPatientVisitServiceServer) AddPatientVisit(context.Context, *AddPatientVisitRequest) (*AddPatientVisitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPatientVisit not implemented")
}
func (*UnimplementedPatientVisitServiceServer) GetPatientVisits(context.Context, *GetPatientVisitsRequest) (*GetPatientVisitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPatientVisits not implemented")
}

func RegisterPatientVisitServiceServer(s *grpc.Server, srv PatientVisitServiceServer) {
	s.RegisterService(&_PatientVisitService_serviceDesc, srv)
}

func _PatientVisitService_AddPatientVisit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPatientVisitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatientVisitServiceServer).AddPatientVisit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.PatientVisitService/AddPatientVisit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatientVisitServiceServer).AddPatientVisit(ctx, req.(*AddPatientVisitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PatientVisitService_GetPatientVisits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPatientVisitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PatientVisitServiceServer).GetPatientVisits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.PatientVisitService/GetPatientVisits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PatientVisitServiceServer).GetPatientVisits(ctx, req.(*GetPatientVisitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PatientVisitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.PatientVisitService",
	HandlerType: (*PatientVisitServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPatientVisit",
			Handler:    _PatientVisitService_AddPatientVisit_Handler,
		},
		{
			MethodName: "GetPatientVisits",
			Handler:    _PatientVisitService_GetPatientVisits_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "patient_visit.proto",
}
