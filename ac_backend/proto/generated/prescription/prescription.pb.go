// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: prescription.proto

package prescription

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_ACTIVE  Status = 0
	Status_STATUS_DELETED Status = 1
	Status_STATUS_EXPIRED Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_ACTIVE",
		1: "STATUS_DELETED",
		2: "STATUS_EXPIRED",
	}
	Status_value = map[string]int32{
		"STATUS_ACTIVE":  0,
		"STATUS_DELETED": 1,
		"STATUS_EXPIRED": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_prescription_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_prescription_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{0}
}

type Urgency int32

const (
	Urgency_CRITICAL Urgency = 0
	Urgency_HIGH     Urgency = 1
	Urgency_MEDIUM   Urgency = 2
	Urgency_LOW      Urgency = 3
)

// Enum value maps for Urgency.
var (
	Urgency_name = map[int32]string{
		0: "CRITICAL",
		1: "HIGH",
		2: "MEDIUM",
		3: "LOW",
	}
	Urgency_value = map[string]int32{
		"CRITICAL": 0,
		"HIGH":     1,
		"MEDIUM":   2,
		"LOW":      3,
	}
)

func (x Urgency) Enum() *Urgency {
	p := new(Urgency)
	*p = x
	return p
}

func (x Urgency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Urgency) Descriptor() protoreflect.EnumDescriptor {
	return file_prescription_proto_enumTypes[1].Descriptor()
}

func (Urgency) Type() protoreflect.EnumType {
	return &file_prescription_proto_enumTypes[1]
}

func (x Urgency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Urgency.Descriptor instead.
func (Urgency) EnumDescriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{1}
}

type Pharmacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Phone   string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *Pharmacy) Reset() {
	*x = Pharmacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pharmacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pharmacy) ProtoMessage() {}

func (x *Pharmacy) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pharmacy.ProtoReflect.Descriptor instead.
func (*Pharmacy) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{0}
}

func (x *Pharmacy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pharmacy) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Pharmacy) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type Refill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date           string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Count          int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	PrescriptionId string `protobuf:"bytes,4,opt,name=prescriptionId,proto3" json:"prescriptionId,omitempty"`
}

func (x *Refill) Reset() {
	*x = Refill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refill) ProtoMessage() {}

func (x *Refill) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refill.ProtoReflect.Descriptor instead.
func (*Refill) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{1}
}

func (x *Refill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Refill) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Refill) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Refill) GetPrescriptionId() string {
	if x != nil {
		return x.PrescriptionId
	}
	return ""
}

type Renewal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date           string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Count          int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	PrescriptionId string `protobuf:"bytes,4,opt,name=prescriptionId,proto3" json:"prescriptionId,omitempty"`
}

func (x *Renewal) Reset() {
	*x = Renewal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Renewal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Renewal) ProtoMessage() {}

func (x *Renewal) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Renewal.ProtoReflect.Descriptor instead.
func (*Renewal) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{2}
}

func (x *Renewal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Renewal) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Renewal) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Renewal) GetPrescriptionId() string {
	if x != nil {
		return x.PrescriptionId
	}
	return ""
}

type Prescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId            string     `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	PrimaryCarePhysician string     `protobuf:"bytes,3,opt,name=primaryCarePhysician,proto3" json:"primaryCarePhysician,omitempty"`
	HealthcareId         string     `protobuf:"bytes,4,opt,name=healthcareId,proto3" json:"healthcareId,omitempty"`
	Timestamp            int64      `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Subject              string     `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	MessageBody          string     `protobuf:"bytes,7,opt,name=messageBody,proto3" json:"messageBody,omitempty"`
	Urgency              Urgency    `protobuf:"varint,8,opt,name=urgency,proto3,enum=api.v1.Urgency" json:"urgency,omitempty"`
	Status               Status     `protobuf:"varint,9,opt,name=status,proto3,enum=api.v1.Status" json:"status,omitempty"`
	Quantity             int64      `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity,omitempty"`
	StartDate            string     `protobuf:"bytes,11,opt,name=startDate,proto3" json:"startDate,omitempty"`
	VisitDate            string     `protobuf:"bytes,12,opt,name=visitDate,proto3" json:"visitDate,omitempty"`
	EndDate              string     `protobuf:"bytes,13,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Pharmacy             *Pharmacy  `protobuf:"bytes,14,opt,name=pharmacy,proto3" json:"pharmacy,omitempty"`
	Qualifier            string     `protobuf:"bytes,15,opt,name=qualifier,proto3" json:"qualifier,omitempty"`
	AttachmentId         string     `protobuf:"bytes,16,opt,name=attachmentId,proto3" json:"attachmentId,omitempty"`
	AttachmentType       string     `protobuf:"bytes,17,opt,name=attachmentType,proto3" json:"attachmentType,omitempty"`
	AttachmentTitle      string     `protobuf:"bytes,18,opt,name=attachmentTitle,proto3" json:"attachmentTitle,omitempty"`
	AttachmentUrl        string     `protobuf:"bytes,19,opt,name=attachmentUrl,proto3" json:"attachmentUrl,omitempty"`
	Refills              []*Refill  `protobuf:"bytes,20,rep,name=refills,proto3" json:"refills,omitempty"`
	Renewals             []*Renewal `protobuf:"bytes,21,rep,name=renewals,proto3" json:"renewals,omitempty"`
	Dose                 string     `protobuf:"bytes,22,opt,name=dose,proto3" json:"dose,omitempty"`
	Frequency            string     `protobuf:"bytes,23,opt,name=frequency,proto3" json:"frequency,omitempty"`
	OrderedBy            string     `protobuf:"bytes,24,opt,name=orderedBy,proto3" json:"orderedBy,omitempty"`
}

func (x *Prescription) Reset() {
	*x = Prescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prescription) ProtoMessage() {}

func (x *Prescription) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prescription.ProtoReflect.Descriptor instead.
func (*Prescription) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{3}
}

func (x *Prescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prescription) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Prescription) GetPrimaryCarePhysician() string {
	if x != nil {
		return x.PrimaryCarePhysician
	}
	return ""
}

func (x *Prescription) GetHealthcareId() string {
	if x != nil {
		return x.HealthcareId
	}
	return ""
}

func (x *Prescription) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Prescription) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Prescription) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *Prescription) GetUrgency() Urgency {
	if x != nil {
		return x.Urgency
	}
	return Urgency_CRITICAL
}

func (x *Prescription) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_ACTIVE
}

func (x *Prescription) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Prescription) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Prescription) GetVisitDate() string {
	if x != nil {
		return x.VisitDate
	}
	return ""
}

func (x *Prescription) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Prescription) GetPharmacy() *Pharmacy {
	if x != nil {
		return x.Pharmacy
	}
	return nil
}

func (x *Prescription) GetQualifier() string {
	if x != nil {
		return x.Qualifier
	}
	return ""
}

func (x *Prescription) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *Prescription) GetAttachmentType() string {
	if x != nil {
		return x.AttachmentType
	}
	return ""
}

func (x *Prescription) GetAttachmentTitle() string {
	if x != nil {
		return x.AttachmentTitle
	}
	return ""
}

func (x *Prescription) GetAttachmentUrl() string {
	if x != nil {
		return x.AttachmentUrl
	}
	return ""
}

func (x *Prescription) GetRefills() []*Refill {
	if x != nil {
		return x.Refills
	}
	return nil
}

func (x *Prescription) GetRenewals() []*Renewal {
	if x != nil {
		return x.Renewals
	}
	return nil
}

func (x *Prescription) GetDose() string {
	if x != nil {
		return x.Dose
	}
	return ""
}

func (x *Prescription) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *Prescription) GetOrderedBy() string {
	if x != nil {
		return x.OrderedBy
	}
	return ""
}

type AddPrescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prescription *Prescription `protobuf:"bytes,1,opt,name=prescription,proto3" json:"prescription,omitempty"`
}

func (x *AddPrescriptionRequest) Reset() {
	*x = AddPrescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPrescriptionRequest) ProtoMessage() {}

func (x *AddPrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPrescriptionRequest.ProtoReflect.Descriptor instead.
func (*AddPrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{4}
}

func (x *AddPrescriptionRequest) GetPrescription() *Prescription {
	if x != nil {
		return x.Prescription
	}
	return nil
}

type AddPrescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddPrescriptionResponse) Reset() {
	*x = AddPrescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPrescriptionResponse) ProtoMessage() {}

func (x *AddPrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPrescriptionResponse.ProtoReflect.Descriptor instead.
func (*AddPrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{5}
}

func (x *AddPrescriptionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPrescriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId string `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
}

func (x *GetPrescriptionsRequest) Reset() {
	*x = GetPrescriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionsRequest) ProtoMessage() {}

func (x *GetPrescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetPrescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{6}
}

func (x *GetPrescriptionsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPrescriptionsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type GetPrescriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prescription []*Prescription `protobuf:"bytes,1,rep,name=prescription,proto3" json:"prescription,omitempty"`
}

func (x *GetPrescriptionsResponse) Reset() {
	*x = GetPrescriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prescription_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrescriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionsResponse) ProtoMessage() {}

func (x *GetPrescriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetPrescriptionsResponse) Descriptor() ([]byte, []int) {
	return file_prescription_proto_rawDescGZIP(), []int{7}
}

func (x *GetPrescriptionsResponse) GetPrescription() []*Prescription {
	if x != nil {
		return x.Prescription
	}
	return nil
}

var File_prescription_proto protoreflect.FileDescriptor

var file_prescription_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x4a, 0x0a, 0x08,
	0x50, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x6a, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x69,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x07, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xc2, 0x06, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x72, 0x65, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x69, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x72, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x69, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x07, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x68, 0x61, 0x72, 0x6d,
	0x61, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x79, 0x52, 0x08, 0x70, 0x68, 0x61,
	0x72, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x28, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x69, 0x6c, 0x6c,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x6e,
	0x65, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x52, 0x08, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x64, 0x42, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x64, 0x42, 0x79, 0x22, 0x52, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x17, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x54,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x43, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11,
	0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x07, 0x55, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10,
	0x03, 0x32, 0xc0, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4d, 0x0a, 0x1e, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x63, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x16, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prescription_proto_rawDescOnce sync.Once
	file_prescription_proto_rawDescData = file_prescription_proto_rawDesc
)

func file_prescription_proto_rawDescGZIP() []byte {
	file_prescription_proto_rawDescOnce.Do(func() {
		file_prescription_proto_rawDescData = protoimpl.X.CompressGZIP(file_prescription_proto_rawDescData)
	})
	return file_prescription_proto_rawDescData
}

var file_prescription_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_prescription_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_prescription_proto_goTypes = []interface{}{
	(Status)(0),                      // 0: api.v1.Status
	(Urgency)(0),                     // 1: api.v1.Urgency
	(*Pharmacy)(nil),                 // 2: api.v1.Pharmacy
	(*Refill)(nil),                   // 3: api.v1.Refill
	(*Renewal)(nil),                  // 4: api.v1.Renewal
	(*Prescription)(nil),             // 5: api.v1.Prescription
	(*AddPrescriptionRequest)(nil),   // 6: api.v1.AddPrescriptionRequest
	(*AddPrescriptionResponse)(nil),  // 7: api.v1.AddPrescriptionResponse
	(*GetPrescriptionsRequest)(nil),  // 8: api.v1.GetPrescriptionsRequest
	(*GetPrescriptionsResponse)(nil), // 9: api.v1.GetPrescriptionsResponse
}
var file_prescription_proto_depIdxs = []int32{
	1, // 0: api.v1.Prescription.urgency:type_name -> api.v1.Urgency
	0, // 1: api.v1.Prescription.status:type_name -> api.v1.Status
	2, // 2: api.v1.Prescription.pharmacy:type_name -> api.v1.Pharmacy
	3, // 3: api.v1.Prescription.refills:type_name -> api.v1.Refill
	4, // 4: api.v1.Prescription.renewals:type_name -> api.v1.Renewal
	5, // 5: api.v1.AddPrescriptionRequest.prescription:type_name -> api.v1.Prescription
	5, // 6: api.v1.GetPrescriptionsResponse.prescription:type_name -> api.v1.Prescription
	6, // 7: api.v1.PrescriptionService.AddPrescription:input_type -> api.v1.AddPrescriptionRequest
	8, // 8: api.v1.PrescriptionService.GetPrescriptions:input_type -> api.v1.GetPrescriptionsRequest
	7, // 9: api.v1.PrescriptionService.AddPrescription:output_type -> api.v1.AddPrescriptionResponse
	9, // 10: api.v1.PrescriptionService.GetPrescriptions:output_type -> api.v1.GetPrescriptionsResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_prescription_proto_init() }
func file_prescription_proto_init() {
	if File_prescription_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prescription_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pharmacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Renewal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPrescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPrescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrescriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prescription_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrescriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prescription_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prescription_proto_goTypes,
		DependencyIndexes: file_prescription_proto_depIdxs,
		EnumInfos:         file_prescription_proto_enumTypes,
		MessageInfos:      file_prescription_proto_msgTypes,
	}.Build()
	File_prescription_proto = out.File
	file_prescription_proto_rawDesc = nil
	file_prescription_proto_goTypes = nil
	file_prescription_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PrescriptionServiceClient is the client API for PrescriptionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrescriptionServiceClient interface {
	AddPrescription(ctx context.Context, in *AddPrescriptionRequest, opts ...grpc.CallOption) (*AddPrescriptionResponse, error)
	GetPrescriptions(ctx context.Context, in *GetPrescriptionsRequest, opts ...grpc.CallOption) (*GetPrescriptionsResponse, error)
}

type prescriptionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPrescriptionServiceClient(cc grpc.ClientConnInterface) PrescriptionServiceClient {
	return &prescriptionServiceClient{cc}
}

func (c *prescriptionServiceClient) AddPrescription(ctx context.Context, in *AddPrescriptionRequest, opts ...grpc.CallOption) (*AddPrescriptionResponse, error) {
	out := new(AddPrescriptionResponse)
	err := c.cc.Invoke(ctx, "/api.v1.PrescriptionService/AddPrescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prescriptionServiceClient) GetPrescriptions(ctx context.Context, in *GetPrescriptionsRequest, opts ...grpc.CallOption) (*GetPrescriptionsResponse, error) {
	out := new(GetPrescriptionsResponse)
	err := c.cc.Invoke(ctx, "/api.v1.PrescriptionService/GetPrescriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrescriptionServiceServer is the server API for PrescriptionService service.
type PrescriptionServiceServer interface {
	AddPrescription(context.Context, *AddPrescriptionRequest) (*AddPrescriptionResponse, error)
	GetPrescriptions(context.Context, *GetPrescriptionsRequest) (*GetPrescriptionsResponse, error)
}

// UnimplementedPrescriptionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPrescriptionServiceServer struct {
}

func (*UnimplementedPrescriptionServiceServer) AddPrescription(context.Context, *AddPrescriptionRequest) (*AddPrescriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPrescription not implemented")
}
func (*UnimplementedPrescriptionServiceServer) GetPrescriptions(context.Context, *GetPrescriptionsRequest) (*GetPrescriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrescriptions not implemented")
}

func RegisterPrescriptionServiceServer(s *grpc.Server, srv PrescriptionServiceServer) {
	s.RegisterService(&_PrescriptionService_serviceDesc, srv)
}

func _PrescriptionService_AddPrescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPrescriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrescriptionServiceServer).AddPrescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.PrescriptionService/AddPrescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrescriptionServiceServer).AddPrescription(ctx, req.(*AddPrescriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrescriptionService_GetPrescriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPrescriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrescriptionServiceServer).GetPrescriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.PrescriptionService/GetPrescriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrescriptionServiceServer).GetPrescriptions(ctx, req.(*GetPrescriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrescriptionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.PrescriptionService",
	HandlerType: (*PrescriptionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPrescription",
			Handler:    _PrescriptionService_AddPrescription_Handler,
		},
		{
			MethodName: "GetPrescriptions",
			Handler:    _PrescriptionService_GetPrescriptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prescription.proto",
}
