{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\TicketBrief.vue?vue&type=style&index=0&id=11883bce&scoped=true&lang=css&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\TicketBrief.vue","mtime":1606031037036},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2NvbW1lbnRzIHsNCiAgaGVpZ2h0OiAyNTBweDsNCn0NCg=="},{"version":3,"sources":["TicketBrief.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0NA;AACA;AACA","file":"TicketBrief.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <v-expansion-panel-header>\r\n      <v-row no-gutters>\r\n        <v-col cols=\"8\">\r\n          <v-row>\r\n            <v-col>\r\n              <h3>{{ ticket.title }}</h3>\r\n              <h6><i>{{getMetadata()}}</i></h6>\r\n            </v-col>\r\n          </v-row>\r\n        </v-col>\r\n        <v-spacer></v-spacer>\r\n        <v-col cols=\"2\" class=\"mr-3\">\r\n          <v-row>\r\n            <v-col>\r\n              <v-select\r\n                  v-model=\"ticket.ticketStatus\"\r\n                  placeholder=\"Default\"\r\n                  :items=\"ticketStatus\"\r\n                  item-text=\"label\"\r\n                  item-value=\"value\"\r\n                  label=\"Status\"\r\n                  outlined\r\n                  dense\r\n                  @click.stop=\"\"\r\n                  @change=\"changeTicketStatus\"\r\n              ></v-select>\r\n            </v-col>\r\n          </v-row>\r\n        </v-col>\r\n        <v-col cols=\"1\">\r\n          <v-row>\r\n            <v-col>\r\n              <v-tooltip bottom>\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn icon v-on:click.stop=\"openDialog\" v-bind=\"attrs\" v-on=\"on\" class=\"pa-0 ma-0\">\r\n                    <v-icon size=\"35\" color=\"grey\">delete</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <span>Delete</span>\r\n              </v-tooltip>\r\n            </v-col>\r\n            <v-col>\r\n              <v-dialog v-model=\"dialog\" max-width=\"250\">\r\n                <confirm-dialog v-bind:title=\"`Are you sure?`\" :body=\"`The action is not reversible.`\" @yes=\"deleteTicket(ticket.ticketId)\" @no=\"dialog=false\"></confirm-dialog>\r\n              </v-dialog>\r\n            </v-col>\r\n          </v-row>\r\n        </v-col>\r\n      </v-row>\r\n    </v-expansion-panel-header>\r\n    <v-expansion-panel-content>\r\n      <v-row class=\"text--secondary ml-1 mr-1 mt-1\">\r\n        <p v-html=\"ticket.body\"></p>\r\n      </v-row>\r\n      <hr>\r\n      <v-row>\r\n        <comments v-model=\"ticket.comments\" :comments=\"ticket.comments\" id=\"comments\"></comments>\r\n      </v-row>\r\n      <v-row class=\"mt-2\">\r\n        <v-flex xs12>\r\n          <tiptap-vuetify v-model=\"comment.body\" :extensions=\"extensions\" placeholder=\"Please reply here...\" min-height=\"150\"/>\r\n        </v-flex>\r\n      </v-row>\r\n      <v-row>\r\n        <v-btn outlined small tile class=\"mt-2\" @click=\"cancel\">Cancel</v-btn>\r\n        <v-btn small tile color=\"info\" class=\"mt-2 ml-2\" @click=\"appendComment\" :disabled=\"!isCommentValid\">Reply</v-btn>\r\n      </v-row>\r\n    </v-expansion-panel-content>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { TiptapVuetify, Heading, Bold, Italic, Strike, Underline, Code, Paragraph, BulletList, OrderedList, ListItem, Link, Blockquote, HorizontalRule, History, CodeBlock, HardBreak, Image } from 'tiptap-vuetify'\r\nimport FileSelector from './Gallery'\r\nimport ImageForm from './ImageForm'\r\nimport Comments from './Comments'\r\nimport {EventBus as bus} from \"../event_bus.js\"\r\nimport ConfirmDialog from \"./ConfirmDialog\"\r\nimport axios from \"axios\"\r\nimport {default as API_ENDPOINTS} from \"@/api\"\r\n\r\nexport default {\r\n  name: \"TicketBrief\",\r\n  components: {TiptapVuetify, Comments, ConfirmDialog},\r\n  props: ['ticket'],\r\n  data() {\r\n    return {\r\n      dialog: false,\r\n      isUpdating: false,\r\n      comment: {\r\n        email: this.$store.getters.email,\r\n        ticketId: this.ticket.ticketId,\r\n        name: \"\",\r\n        body: \"\"\r\n      },\r\n      ticketStatus: [\r\n        {label: \"OPEN\", value: 1},\r\n        {label: \"CLOSED\", value: 2},\r\n        {label: \"RESOLVED\", value: 3},\r\n      ],\r\n      extensions: [\r\n        History,\r\n        Blockquote,\r\n        Link,\r\n        Underline,\r\n        Strike,\r\n        Italic,\r\n        ListItem,\r\n        BulletList,\r\n        OrderedList,\r\n        [Heading, {\r\n          options: {\r\n            levels: [1, 2, 3]\r\n          }\r\n        }],\r\n        Bold,\r\n        Code,\r\n        CodeBlock,\r\n        HorizontalRule,\r\n        Paragraph,\r\n        HardBreak,\r\n        [Image, {\r\n          options: {\r\n            imageSources: [\r\n              { component: FileSelector, name: 'Uploads' },\r\n              { component: ImageForm, name: 'Add By Link' }\r\n            ],\r\n            imageSourcesOverride: true\r\n          }\r\n        }],\r\n      ],\r\n    }\r\n  },\r\n  computed: {\r\n    isCommentValid() {\r\n      if (!this.comment.body || this.comment.body == \"\" || this.comment.body == \"<p></p>\") {\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.dialog = true\r\n    },\r\n    deleteTicket(ticketId) {\r\n      return new Promise((resolve, reject) => {\r\n        this.isUpdating = true\r\n        axios({url: API_ENDPOINTS.DELETE_TICKET(this.$store.getters.email, ticketId), method: 'DELETE'})\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.isUpdating = false\r\n              this.$emit('ticketDeleted', ticketId)\r\n              this.dialog = false\r\n            })\r\n            .catch(err => {\r\n              reject(err)\r\n              this.isUpdating = false\r\n              this.dialog = false\r\n              this.showQuickMessage(\"Failed to delete the ticket, please try again later.\")\r\n            })\r\n      })\r\n    },\r\n    changeTicketStatus() {\r\n      return new Promise((resolve, reject) => {\r\n        this.isUpdating = true\r\n        let data = {\r\n          email: this.$store.getters.email,\r\n          ticket: this.ticket\r\n        }\r\n        axios({url: API_ENDPOINTS.UPDATE_TICKET(this.ticket.ticketId), data: data, method: 'PUT'})\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.isUpdating = false\r\n              this.$emit('ticketUpdated', resp.data)\r\n            })\r\n            .catch(err => {\r\n              reject(err)\r\n              this.isUpdating = false\r\n              this.showQuickMessage(\"Failed to update the ticket, please try again later.\")\r\n            })\r\n      })\r\n    },\r\n    getMetadata() {\r\n      let res = \"\"\r\n      if (this.ticket?.comments?.length && this.ticket?.comments?.length > 0) {\r\n        res += this.ticket?.comments.length + (this.ticket?.comments.length  > 1 ? \" replies\" : \" reply\")\r\n      }\r\n      if (res && res != \"\" && this.ticket?.projectName && this.ticket?.projectName != \"\") {\r\n        res = res + \" | \" + this.ticket?.projectName\r\n      } else {\r\n        res += this.ticket?.projectName\r\n      }\r\n      return res\r\n    },\r\n    cancel() {\r\n      this.$emit('cancel')\r\n    },\r\n    appendComment() {\r\n      this.$emit('appendComment', this.comment)\r\n    },\r\n    onCommentAppended() {\r\n      this.comment.body = \"\"\r\n    }\r\n  },\r\n  mounted() {\r\n    bus.$on('commentAppended', this.onCommentAppended)\r\n  },\r\n  created() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#comments {\r\n  height: 250px;\r\n}\r\n</style>"]}]}