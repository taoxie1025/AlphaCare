{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\views\\Articles.vue?vue&type=template&id=1d7dfdf7&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\views\\Articles.vue","mtime":1604395286150},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}