{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\views\\Subscribers.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\views\\Subscribers.vue","mtime":1606007730446},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Subscribers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Subscribers.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-app id=\"app\">\r\n    <v-container fluid>\r\n      <v-layout row wrap class=\"ma-1\">\r\n        <v-flex xs12>\r\n          <h3>Subscribers</h3>\r\n        </v-flex>\r\n        <v-flex xs12>\r\n            <v-text-field\r\n                label=\"Email Address\"\r\n                placeholder=\"Search for subscriber\"\r\n                outlined\r\n                prepend-inner-icon=\"mdi-magnify\"\r\n                :append-icon=\"emailFilter != '' ? 'mdi-close' : ''\"\r\n                v-model=\"emailFilter\"\r\n                @click:append=\"clear\"\r\n            >\r\n            </v-text-field>\r\n        </v-flex>\r\n        <v-flex xs12 class=\"mb-3\">\r\n            <v-btn tile dark color=\"info\" @click=\"showAddSubscriberDialog\">\r\n              <v-icon left>mdi-plus-thick</v-icon>\r\n              Add subscriber\r\n            </v-btn>\r\n            <v-btn class=\"ma-1\" tile outlined color=\"info\" :disabled=\"selectedSubscribers.length==0\" @click=\"showSubscriberDialogOnEdit\">Edit</v-btn>\r\n            <v-btn class=\"ma-1\" tile outlined color=\"info\" :disabled=\"selectedSubscribers.length==0\" @click=\"showConfirmDialog\">Delete</v-btn>\r\n        </v-flex>\r\n        <v-flex xs12>\r\n          <v-data-table\r\n              @click:row=\"rowClick\"\r\n              v-model=\"selectedSubscribers\"\r\n              :headers=\"headers\"\r\n              :items=\"subscribers\"\r\n              item-key=\"email\"\r\n              :loading=\"isLoading\"\r\n              loading-text=\"Loading...\"\r\n              hide-default-footer\r\n              :server-items-length=\"pageSize\"\r\n              disable-sort\r\n              single-select\r\n              class=\"elevation-0\"\r\n              v-infinite-scroll=\"loadMore\"\r\n              infinite-scroll-disabled=\"busy\"\r\n              infinite-scroll-distance=\"10\"\r\n              infinite-scroll-immediate-check=\"false\"\r\n          >\r\n          </v-data-table>\r\n        </v-flex>\r\n       </v-layout>\r\n      <v-layout>\r\n        <v-flex justify=\"center\">\r\n          <v-dialog v-if=\"subscriberEditorDialog\" v-model=\"subscriberEditorDialog\" width=\"500px\">\r\n              <subscriber-form\r\n                  :projectId=\"$route.params.projectId\"\r\n                  :subscriber=\"selectedSubscribers.length>0 ? selectedSubscribers[0] : {}\"\r\n                  :isEditing=\"selectedSubscribers.length>0 ? true : false\"\r\n                  @close=\"subscriberEditorDialog=false\"\r\n                  @subscriberAdded=\"onSubscriberAdded\"\r\n                  @subscriberUpdated=\"onSubscriberUpdated\"></subscriber-form>\r\n          </v-dialog>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout>\r\n        <v-row justify=\"center\">\r\n          <v-dialog v-model=\"deleteConfirmDialog\" max-width=\"250\">\r\n            <confirm-dialog v-bind:title=\"`Are you sure?`\" :body=\"`The subscriber will no longer receive your content.`\" @yes=\"deleteConfirmed\" @no=\"deleteConfirmDialog=false\"></confirm-dialog>\r\n          </v-dialog>\r\n        </v-row>\r\n      </v-layout>\r\n    </v-container>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport {default as API_ENDPOINTS} from \"../api\";\r\nimport SubscriberForm from \"@/components/SubscriberCard\";\r\nimport ConfirmDialog from \"@/components/ConfirmDialog\";\r\n\r\nexport default {\r\n  components: {SubscriberForm, ConfirmDialog},\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { text: 'Email', align: 'start', value: 'email', class: \"grey lighten-4\"},\r\n        { text: 'Current Article No.', align: 'center', value: 'articleCursor', class: \"grey lighten-4\"},\r\n        { text: 'Last Broadcast Date', align: 'center', value: 'lastBroadcastTimeMs', class: \"grey lighten-4\"},\r\n        { text: 'Subscription Date', align: 'center', value: 'createdAt', class: \"grey lighten-4\"},\r\n        { text: 'Enabled', align: 'end', value: 'isEnabled', class: \"grey lighten-4\"}\r\n        ],\r\n      token: \"\",\r\n      pageSize: 15,\r\n      subscribers: [],\r\n      isLoading: false,\r\n      selectedSubscribers: [],\r\n      emailFilter: \"\",\r\n      subscriberEditorDialog: false,\r\n      deleteConfirmDialog: false\r\n    }\r\n  },\r\n  watch: {\r\n    emailFilter() {\r\n      if (this.emailFilter == \"\") {\r\n        this.subscribers = []\r\n        this.readSubscribers()\r\n      } else {\r\n        this.subscribers = []\r\n        this.token = \"\"\r\n        this.searchSubscriber()\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubscriberUpdated(updatedSubscriber) {\r\n      this.subscriberEditorDialog = false\r\n      let index = 0;\r\n      for (let i = 0; i < this.subscribers.length; i++) {\r\n        if (this.subscribers[i].email == updatedSubscriber.email) {\r\n          index = i\r\n          break\r\n        }\r\n      }\r\n      if (updatedSubscriber.isEnabled) {\r\n        updatedSubscriber.isEnabled = \"Yes\"\r\n      } else {\r\n        updatedSubscriber.isEnabled = \"No\"\r\n      }\r\n      updatedSubscriber.createdAt = this.convertEpochToDateString(updatedSubscriber.createdAt)\r\n      updatedSubscriber.lastBroadcastTimeMs = this.convertEpochToDateString(updatedSubscriber.lastBroadcastTimeMs)\r\n      this.subscribers.splice(index, 1, updatedSubscriber)\r\n    },\r\n    onSubscriberAdded(newSubscriber) {\r\n      this.subscribers.unshift(newSubscriber)\r\n    },\r\n    deleteConfirmed() {\r\n      let index = 0;\r\n      for (let i = 0; i < this.subscribers.length; i++) {\r\n        if (this.subscribers[i].email == this.selectedSubscribers[0].email) {\r\n          index = i\r\n          break\r\n        }\r\n      }\r\n      return new Promise((resolve, reject) => {\r\n        axios({url: API_ENDPOINTS.DELETE_SUBSCRIBER(this.$route.params.projectId, this.selectedSubscribers[0].email), method: 'DELETE' })\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.subscribers.splice(index, 1)\r\n              this.deleteConfirmDialog = false\r\n            })\r\n            .catch(err => {\r\n              reject(err)\r\n              this.deleteConfirmDialog = false\r\n            })\r\n      })\r\n    },\r\n    showConfirmDialog() {\r\n      this.deleteConfirmDialog = true\r\n    },\r\n    rowClick(item) {\r\n      this.selectedSubscribers = []\r\n      this.selectedSubscribers.push(item)\r\n    },\r\n    highlightClickedRow(item) {\r\n      const tr = item.target.parentNode;\r\n      tr.classList.add('highlight');\r\n    },\r\n    showAddSubscriberDialog() {\r\n      this.selectedSubscribers = []\r\n      this.subscriberEditorDialog = true\r\n    },\r\n    showSubscriberDialogOnEdit() {\r\n      this.subscriberEditorDialog = true\r\n    },\r\n    clear() {\r\n      this.emailFilter = \"\"\r\n    },\r\n    searchSubscriber() {\r\n      this.isLoading = true\r\n      this.subscribers = []\r\n      this.selectedSubscribers = []\r\n      return new Promise((resolve, reject) => {\r\n        let data = {projectId: this.$route.params.projectId, emailFilter: this.emailFilter}\r\n        axios({url: API_ENDPOINTS.SEARCH_SUBSCRIBERS, params: data, method: 'GET' })\r\n            .then(resp => {\r\n              resolve(resp)\r\n              for (let i = 0; i < resp.data.length; i++) {\r\n                const subscriber = {email: resp.data[i].email,\r\n                  articleCursor: resp.data[i].articleCursor,\r\n                  lastBroadcastTimeMs: this.convertEpochToDateString(resp.data[i].lastBroadcastTimeMs),\r\n                  createdAt: this.convertEpochToDateString(resp.data[i].createdAt),\r\n                  isEnabled: resp.data[i].isEnabled ? \"Yes\" : \"No\"\r\n                }\r\n                this.subscribers.push(subscriber)\r\n              }\r\n              this.isLoading = false\r\n            })\r\n            .catch(err => {\r\n              reject(err)\r\n              this.isLoading = false\r\n            })\r\n      })\r\n    },\r\n    loadMore() {\r\n      if (this.token != \"EOF\" && this.emailFilter == \"\") {\r\n        this.readSubscribers()\r\n      }\r\n    },\r\n    validateLogin() {\r\n      if (!this.$store.getters.isLoggedIn || !this.$store.getters.email) {\r\n        console.log(\"not signed in \");\r\n        this.$router.push('/')\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    readSubscribers() {\r\n      this.isLoading = true\r\n      return new Promise((resolve, reject) => {\r\n        let data = {email: this.$store.getters.email ? this.$store.getters.email : this.project.email,\r\n          projectId: this.$route.params.projectId, pageSize: this.pageSize,\r\n          token: this.token\r\n        }\r\n        axios({url: API_ENDPOINTS.READ_SUBSCRIBERS, data: data, method: 'POST' })\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.token = resp.data.token\r\n              for (let i = 0; i < resp.data.subscribers.length; i++) {\r\n                const subscriber = {email: resp.data.subscribers[i].email,\r\n                  articleCursor: resp.data.subscribers[i].articleCursor,\r\n                  lastBroadcastTimeMs: this.convertEpochToDateString(resp.data.subscribers[i].lastBroadcastTimeMs),\r\n                  createdAt: this.convertEpochToDateString(resp.data.subscribers[i].createdAt),\r\n                  isEnabled: resp.data.subscribers[i].isEnabled ? \"Yes\" : \"No\"\r\n                }\r\n                this.subscribers.push(subscriber)\r\n              }\r\n              this.isLoading = false\r\n            })\r\n            .catch(err => {\r\n              reject(err)\r\n              this.isLoading = false\r\n            })\r\n      })\r\n    },\r\n    convertEpochToDateString(timestamp) {\r\n      if (timestamp && timestamp > 0) {\r\n        const date = new Date(timestamp)\r\n        return date.toLocaleDateString()\r\n      }\r\n      return \"-\"\r\n    }\r\n  },\r\n  created: function () {\r\n    this.validateLogin()\r\n\r\n    //bypass javascript not enabled issue\r\n    if (!this.subscribers || this.subscribers.length == 0) {\r\n      this.subscribers = []\r\n      this.loadMore()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.v-text-field .v-icon {\r\n  color: grey !important;\r\n}\r\n.v-data-table .v-icon {\r\n  color: grey !important;\r\n}\r\n</style>\r\n"]}]}