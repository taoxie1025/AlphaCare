{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\Gallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\Gallery.vue","mtime":1602409945492},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qKgogKiBFeGFtcGxlIG9mIGEgY3VzdG9tIEltYWdlIHNlbGVjdG9yCiAqIEtleSBpcyB0byBlbWl0IGEgc2VsZWN0LWZpbGUgZXZlbnQgd2hlbiBhIGZpbGUgbmVlZHMgdG8gYmUgYWRkZWQKICovCmltcG9ydCB7IFZJbWcgfSBmcm9tICd2dWV0aWZ5L2xpYicKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHtkZWZhdWx0IGFzIEFQSV9FTkRQT0lOVFN9IGZyb20gIi4uL2FwaSI7CmltcG9ydCBzdG9yZSBmcm9tICIuLi9zdG9yZS9pbmRleCIKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkZpbGVTZWxlY3RvciIsCiAgICBjb21wb25lbnRzOiB7IFZJbWcgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgLy8gU29tZSBwdWJsaWMgZG9tYWluIGltYWdlcyBmcm9tIHdpa2ltZWRpYS4KICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzaG93QWxlcnQ6IGZhbHNlLAogICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICAgICAgICBpbWFnZXM6IFsKICAgICAgICAgICAgICAgIHsgc3JjOiAnaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi9hL2E4L1N0cmVpZmVuaG9lcm5jaGVuLmpwZy8xMDI0cHgtU3RyZWlmZW5ob2VybmNoZW4uanBnJywgYWx0OiAnU2liZXJpYW4gQ2hpcG11bmsnIH0sCiAgICAgICAgICAgICAgICB7IHNyYzogJ2h0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvdGh1bWIvZC9kOC9OQVNBX01hcnNfUm92ZXIuanBnLzc1MHB4LU5BU0FfTWFyc19Sb3Zlci5qcGcnLCBhbHQ6ICdOQVNBIE1hcnMgUm92ZXInIH0sCiAgICAgICAgICAgICAgICB7IHNyYzogJ2h0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvZC9kZC9NdXlicmlkZ2VfcmFjZV9ob3JzZV9hbmltYXRlZC5naWYnLCBhbHQ6ICdNdXlicmlkZ2UgcmFjZSBob3JzZSBhbmltYXRlZCcgfSwKICAgICAgICAgICAgICAgIHsgc3JjOiAnaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy8yLzJhL0xvY29tb3RpdmVfVEVNMk0tMDYzXzIwMDZfRzIuanBnJywgYWx0OiAnTG9jb21vdGl2ZSBURU0yTS0wNjMgMjAwNiBHMicgfSwKICAgICAgICAgICAgICAgIHsgc3JjOiAnaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy84LzgwL0lTU19NYXJjaF8yMDA5LmpwZycsIGFsdDogJ0lTUyBNYXJjaCAyMDA5JyB9LAogICAgICAgICAgICAgICAgeyBzcmM6ICdodHRwczovL3VwbG9hZC53aWtpbWVkaWEub3JnL3dpa2lwZWRpYS9jb21tb25zLzQvNDQvRi0xOEZfYWZ0ZXJfbGF1bmNoX2Zyb21fVVNTX0FicmFoYW1fTGluY29sbl8lMjhDVk4tNzIlMjkuanBnJywgYWx0OiAnRi0xOEYgYWZ0ZXIgbGF1bmNoIGZyb20gVVNTIEFicmFoYW0gTGluY29sbiAoQ1ZOLTcyKScgfSwKICAgICAgICAgICAgICAgIHsgc3JjOiAnaHR0cHM6Ly91cGxvYWQud2lraW1lZGlhLm9yZy93aWtpcGVkaWEvY29tbW9ucy90aHVtYi9hL2E4L1N0cmVpZmVuaG9lcm5jaGVuLmpwZy8xMDI0cHgtU3RyZWlmZW5ob2VybmNoZW4uanBnJywgYWx0OiAnU2liZXJpYW4gQ2hpcG11bmsnIH1dCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzZWxlY3RJbWFnZShpbWcpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0LWZpbGUnLCBpbWcpOwogICAgICAgIH0sCiAgICAgICAgY2hvb3NlRmlsZXMoKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlVXBsb2FkIikuY2xpY2soKQogICAgICAgIH0sCiAgICAgICAgcHJldmlld0ZpbGVzKGV2ZW50KSB7CiAgICAgICAgICAgIGNvbnN0IGltYWdlID0gZXZlbnQ/LnRhcmdldD8uZmlsZXNbMF0KICAgICAgICAgICAgaWYgKGltYWdlKSB7CiAgICAgICAgICAgICAgICBpZiAoaW1hZ2Uuc2l6ZSAvIDEwMjQgLyAxMDI0ID49IDIpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dBbGVydCA9IHRydWUKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93QWxlcnQgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0sIDQwMDApCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkSW1hZ2UoaW1hZ2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHVwbG9hZEltYWdlKGltYWdlKSB7CiAgICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpCiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiZmlsZSIsIGltYWdlKQogICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoInJlcXVlc3RlckVtYWlsIiwgc3RvcmUuZ2V0dGVycy5lbWFpbCkKICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICAgICAgICAgIGF4aW9zKHt1cmw6IEFQSV9FTkRQT0lOVFMuVVBMT0FEX0ZJTEUsIGRhdGE6IGZvcm1EYXRhLCBtZXRob2Q6ICdQT1NUJyB9KQogICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3ApCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0ltYWdlID0ge3NyYzogcmVzcC5kYXRhLnVybCwgYWx0OiByZXNwLmRhdGEudXJsfQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlcy5wdXNoKG5ld0ltYWdlKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycikKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBsaXN0SW1hZ2VzKCkgewogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgICAgICAgIHVybDogQVBJX0VORFBPSU5UUy5MSVNUX0ZJTEVTKHN0b3JlLmdldHRlcnMuZW1haWwpLAogICAgICAgICAgICAgICAgICAgIHBhcmFtczoge3JlcXVlc3RlckVtYWlsOiBzdG9yZS5nZXR0ZXJzLmVtYWlsfSwKICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnCiAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3ApCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3AuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3SW1hZ2UgPSB7c3JjOiBpdGVtLnVybCwgYWx0OiAiIn0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VzLnB1c2gobmV3SW1hZ2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGRlbGV0ZUZpbGUoaW5kZXgpIHsKICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgIGNvbnN0IGtleSA9IHRoaXMuaW1hZ2VzW2luZGV4XS5zcmM/LnNwbGl0KHN0b3JlLmdldHRlcnMuZW1haWwgKyAiLyIpWzFdCgogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgICAgICAgIHVybDogQVBJX0VORFBPSU5UUy5ERUxFVEVfRklMRShzdG9yZS5nZXR0ZXJzLmVtYWlsLCBrZXkpLAogICAgICAgICAgICAgICAgICAgIHBhcmFtczoge3JlcXVlc3RlckVtYWlsOiBzdG9yZS5nZXR0ZXJzLmVtYWlsfSwKICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnCiAgICAgICAgICAgICAgICB9KS50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3ApCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VzLnNwbGljZShpbmRleCwgMSkKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZQogICAgICAgIHRoaXMubGlzdEltYWdlcygpCiAgICB9Cn0K"},{"version":3,"sources":["Gallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gallery.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n      <v-flex xs12>\r\n        <v-progress-linear :active=\"isLoading\" class=\"ma-0\" color=\"green lighten-3\" height=\"4\" indeterminate></v-progress-linear>\r\n        <input id=\"fileUpload\" type=\"file\" accept=\"image/*\" @change=\"previewFiles\" hidden>\r\n      </v-flex>\r\n      <v-alert v-if=\"showAlert\" type=\"error\">\r\n        Image size cannot exceed 2 MB\r\n      </v-alert>\r\n    <v-row class=\"ma-0\">\r\n        <v-img\r\n             class=\"ma-1 selectable\"\r\n             max-height=\"109\"\r\n             max-width=\"109\">\r\n          <v-btn color=\"primary\" id=\"uploadBtn\" @click=\"chooseFiles()\">\r\n              <v-icon>mdi-camera</v-icon>\r\n              Upload\r\n          </v-btn>\r\n        </v-img>\r\n        <v-img\r\n            v-for=\"(img, i) in images\"\r\n            :key=\"'img-' + i\"\r\n            :alt=\"img.alt\"\r\n            :src=\"img.src\"\r\n            class=\"ma-1 selectable\"\r\n            max-height=\"109\"\r\n            max-width=\"109\"\r\n            @click=\"selectImage(img)\"\r\n        >\r\n            <v-col class=\"text-right ml-3\">\r\n                <v-btn v-if=\"i > 6\" color=\"red\" icon small @click.stop=\"deleteFile(i)\">\r\n                    <v-icon>mdi-trash-can-outline</v-icon>\r\n                </v-btn>\r\n            </v-col>\r\n        </v-img>\r\n     </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n    /**\r\n     * Example of a custom Image selector\r\n     * Key is to emit a select-file event when a file needs to be added\r\n     */\r\n    import { VImg } from 'vuetify/lib'\r\n    import axios from \"axios\";\r\n    import {default as API_ENDPOINTS} from \"../api\";\r\n    import store from \"../store/index\"\r\n    export default {\r\n        name: \"FileSelector\",\r\n        components: { VImg },\r\n        data() {\r\n            // Some public domain images from wikimedia.\r\n            return {\r\n                showAlert: false,\r\n                isLoading: false,\r\n                images: [\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Streifenhoernchen.jpg/1024px-Streifenhoernchen.jpg', alt: 'Siberian Chipmunk' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/NASA_Mars_Rover.jpg/750px-NASA_Mars_Rover.jpg', alt: 'NASA Mars Rover' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/d/dd/Muybridge_race_horse_animated.gif', alt: 'Muybridge race horse animated' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/2/2a/Locomotive_TEM2M-063_2006_G2.jpg', alt: 'Locomotive TEM2M-063 2006 G2' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/8/80/ISS_March_2009.jpg', alt: 'ISS March 2009' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/4/44/F-18F_after_launch_from_USS_Abraham_Lincoln_%28CVN-72%29.jpg', alt: 'F-18F after launch from USS Abraham Lincoln (CVN-72)' },\r\n                    { src: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Streifenhoernchen.jpg/1024px-Streifenhoernchen.jpg', alt: 'Siberian Chipmunk' }]\r\n            }\r\n        },\r\n        methods: {\r\n            selectImage(img) {\r\n                this.$emit('select-file', img);\r\n            },\r\n            chooseFiles() {\r\n                document.getElementById(\"fileUpload\").click()\r\n            },\r\n            previewFiles(event) {\r\n                const image = event?.target?.files[0]\r\n                if (image) {\r\n                    if (image.size / 1024 / 1024 >= 2) {\r\n                        this.showAlert = true\r\n                        setTimeout(() => {\r\n                            this.showAlert = false\r\n                        }, 4000)\r\n                    } else {\r\n                        this.uploadImage(image)\r\n                    }\r\n                }\r\n            },\r\n            uploadImage(image) {\r\n                this.isLoading = true\r\n                const formData = new FormData()\r\n                formData.append(\"file\", image)\r\n                formData.append(\"requesterEmail\", store.getters.email)\r\n                return new Promise((resolve, reject) => {\r\n                    axios({url: API_ENDPOINTS.UPLOAD_FILE, data: formData, method: 'POST' })\r\n                        .then(resp => {\r\n                            resolve(resp)\r\n                            const newImage = {src: resp.data.url, alt: resp.data.url}\r\n                            this.images.push(newImage)\r\n                            this.isLoading = false\r\n                        })\r\n                        .catch(err => {\r\n                            reject(err)\r\n                            this.isLoading = false\r\n                        })\r\n                })\r\n            },\r\n            listImages() {\r\n                return new Promise((resolve, reject) => {\r\n                    axios({\r\n                        url: API_ENDPOINTS.LIST_FILES(store.getters.email),\r\n                        params: {requesterEmail: store.getters.email},\r\n                        method: 'GET'\r\n                    }).then(resp => {\r\n                            resolve(resp)\r\n                            resp.data.forEach(item => {\r\n                                const newImage = {src: item.url, alt: \"\"}\r\n                                this.images.push(newImage)\r\n                            })\r\n                            this.isLoading = false\r\n                        }).catch(err => {\r\n                            reject(err)\r\n                            this.isLoading = false\r\n                        })\r\n                })\r\n            },\r\n            deleteFile(index) {\r\n                this.isLoading = true\r\n                const key = this.images[index].src?.split(store.getters.email + \"/\")[1]\r\n\r\n                return new Promise((resolve, reject) => {\r\n                    axios({\r\n                        url: API_ENDPOINTS.DELETE_FILE(store.getters.email, key),\r\n                        params: {requesterEmail: store.getters.email},\r\n                        method: 'DELETE'\r\n                    }).then(resp => {\r\n                            resolve(resp)\r\n                            this.images.splice(index, 1)\r\n                            this.isLoading = false\r\n                        }).catch(err => {\r\n                            reject(err)\r\n                            this.isLoading = false\r\n                        })\r\n                })\r\n            }\r\n        },\r\n        created() {\r\n            this.isLoading = true\r\n            this.listImages()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .selectable {\r\n        cursor: pointer;\r\n    }\r\n    #uploadBtn {\r\n        width: 115px;\r\n        height: 115px;\r\n    }\r\n</style>"]}]}