{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\Auth.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\Auth.vue","mtime":1603867574409},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkgewogIC52LWNvbnRlbnQgewogICAgbWFyZ2luOiAwOwogIH0KfQoK"},{"version":3,"sources":["Auth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;AACA;AACA","file":"Auth.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n  <div id=\"app\">\r\n        <div>\r\n          <v-tabs v-model=\"tab\" show-arrows background-color=\"deep-purple accent-3\" icons-and-text dark grow>\r\n            <v-tabs-slider color=\"purple darken-4\"></v-tabs-slider>\r\n            <v-tab v-for=\"(tab,i) in tabs\" :key=\"tab+i\">\r\n              <v-icon large>{{ tab.icon }}</v-icon>\r\n              <div class=\"caption py-1\">{{ tab.name }}</div>\r\n            </v-tab>\r\n            <v-tab-item>\r\n              <v-card class=\"px-4\">\r\n                <v-card-text>\r\n                  <v-form ref=\"loginForm\" v-model=\"valid\" lazy-validation>\r\n                    <v-row>\r\n                      <v-col cols=\"12\">\r\n                        <v-text-field v-model=\"loginEmail\" :rules=\"loginEmailRules\" label=\"E-mail\" required></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\">\r\n                        <v-text-field v-if=\"!isPasswordRecover\" v-model=\"loginPassword\" :append-icon=\"show1?'eye':'eye-off'\" :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Password\" hint=\"At least 4 characters\" counter @click:append=\"show1 = !show1\"></v-text-field>\r\n                      </v-col>\r\n                      <v-col class=\"d-flex\" cols=\"12\" sm=\"3\" xsm=\"12\" align-end>\r\n                        <v-btn x-small block text  color=\"blue\" @click=\"showForgotPassword\" v-html=\"!isPasswordRecover ? `Forgot Password?` : `Login`\"></v-btn>\r\n                      </v-col>\r\n                      <v-spacer></v-spacer>\r\n                      <v-col class=\"d-flex\" cols=\"12\" sm=\"3\" xsm=\"12\" align-end>\r\n                        <v-btn v-if=\"!isPasswordRecover\" :disabled=\"!valid\" x-large block color=\"success\" @click=\"validateLogin\"> Login </v-btn>\r\n                        <v-btn v-else x-large block :disabled=\"isUpdating || !isEmail(loginEmail)\" color=\"success\" @click=\"dialog=true\"> Continue </v-btn>\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-form>\r\n                </v-card-text>\r\n              </v-card>\r\n            </v-tab-item>\r\n            <v-tab-item>\r\n              <v-card class=\"px-4\">\r\n                <v-card-text>\r\n                  <v-form ref=\"registerForm\" v-model=\"valid\" lazy-validation>\r\n                    <v-row>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"6\">\r\n                        <v-text-field v-model=\"firstName\" :rules=\"[rules.required]\" label=\"First Name\" maxlength=\"20\" required></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"6\">\r\n                        <v-text-field v-model=\"lastName\" :rules=\"[rules.required]\" label=\"Last Name\" maxlength=\"20\" required></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\">\r\n                        <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\">\r\n                        <v-text-field v-model=\"password\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\" :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Password\" hint=\"At least 4 characters\" counter @click:append=\"show1 = !show1\"></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\">\r\n                        <v-text-field block v-model=\"verify\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\" :rules=\"[rules.required, passwordMatch]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\" label=\"Confirm Password\" counter @click:append=\"show1 = !show1\"></v-text-field>\r\n                      </v-col>\r\n                      <v-spacer></v-spacer>\r\n                      <v-col class=\"d-flex ml-auto\" cols=\"12\" sm=\"3\" xsm=\"12\">\r\n                        <v-btn x-large block :disabled=\"!valid\" color=\"success\" @click=\"validateSignUp\">Register</v-btn>\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-form>\r\n                </v-card-text>\r\n              </v-card>\r\n            </v-tab-item>\r\n          </v-tabs>\r\n          <v-row justify=\"center\">\r\n            <v-dialog v-model=\"dialog\" max-width=\"350\">\r\n              <confirm-dialog v-bind:title=\"`Password Recovery`\" :body=\"`If you have an account with us, a link will be sent to your email to reset your password. The link will be expired in 1 hour.`\" @yes=\"sendResetLink\" @no=\"dialog=false\"></confirm-dialog>\r\n            </v-dialog>\r\n          </v-row>\r\n        </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport axios from \"axios\";\r\nimport {default as API_ENDPOINTS} from \"@/api\";\r\n\r\n  export default {\r\n    components: {ConfirmDialog},\r\n    props: [\r\n      'tab'\r\n    ],\r\n    data() {\r\n      return {\r\n        isUpdating: false,\r\n        isPasswordRecover: false,\r\n        dialog: false,\r\n        tabs: [\r\n          {name:\"Login\", icon:\"mdi-account\"},\r\n          {name:\"Register\", icon:\"mdi-account-outline\"}\r\n        ],\r\n        valid: true,\r\n\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        verify: \"\",\r\n        loginPassword: \"\",\r\n        loginEmail: \"\",\r\n        loginEmailRules: [\r\n          v => !!v || \"Required\",\r\n          v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"\r\n        ],\r\n        emailRules: [\r\n          v => !!v || \"Required\",\r\n          v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"\r\n        ],\r\n\r\n        show1: false,\r\n        rules: {\r\n          required: value => !!value || \"Required.\",\r\n          min: v => (v && v.length >= 4) || \"Min 4 characters\"\r\n\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      isEmail(email) {\r\n        const re = /\\S+@\\S+\\.\\S+/;\r\n        return re.test(email);\r\n      },\r\n      sendResetLink() {\r\n        return new Promise((resolve, reject) => {\r\n          this.isUpdating = true\r\n          const data = {email: this.loginEmail}\r\n          axios({url: API_ENDPOINTS.RESET_PASSWORD, data: data, method: 'POST'})\r\n              .then(resp => {\r\n                resolve(resp)\r\n                this.isUpdating = false\r\n                this.dialog = false\r\n              })\r\n              .catch(err => {\r\n                reject(err)\r\n                this.isUpdating = false\r\n                this.dialog = false\r\n              })\r\n        })\r\n      },\r\n      showForgotPassword() {\r\n        this.isPasswordRecover = !this.isPasswordRecover\r\n      },\r\n      validateLogin() {\r\n        if (this.$refs.loginForm.validate()) {\r\n          this.signin();\r\n        }\r\n      },\r\n      validateSignUp() {\r\n        if (this.$refs.registerForm.validate()) {\r\n          this.signup();\r\n        }\r\n      },\r\n      reset() {\r\n        //this.$refs.loginForm.reset();\r\n        this.loginPassword = \"\";\r\n        this.password = \"\";\r\n      },\r\n      resetValidation() {\r\n        this.$refs.form.resetValidation();\r\n      },\r\n      signup() {\r\n        let data = {\r\n          firstName: this.firstName,\r\n          lastName: this.lastName,\r\n          email: this.email,\r\n          password: this.password,\r\n        }\r\n        this.$store.dispatch('register', data)\r\n          .then(() => {\r\n            this.loginEmail = this.email\r\n            this.loginPassword = this.password\r\n            this.signin()\r\n          })\r\n          .catch(err => {\r\n            if (err.length > 0) {\r\n              this.reset()\r\n            }\r\n          })\r\n      },\r\n\r\n      signin() {\r\n        let data = {\r\n          email: this.loginEmail,\r\n          password: this.loginPassword\r\n        }\r\n        this.$store.dispatch('login', data)\r\n                .then(() => {\r\n                  this.$router.push('/dashboard')\r\n                })\r\n                .catch(err => {\r\n                  if (err.length > 0) {\r\n                    this.reset()\r\n                  }\r\n                  this.reset()\r\n                })\r\n\r\n      },\r\n\r\n    },\r\n    computed: {\r\n      passwordMatch() {\r\n        return () => this.password === this.verify || \"Password must match\";\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    .v-content {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}