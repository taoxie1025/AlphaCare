{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\intros\\introEleven.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\components\\intros\\introEleven.vue","mtime":1603143512831},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJnLWltYWdlIHsNCiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjsNCiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsNCiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsNCiAgbWluLWhlaWdodDogNjB2aDsNCn0NCiNhdmF0YXItd3JhcCB7DQogIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQogIG1hcmdpbi1ib3R0b206IDE4MHB4Ow0KICBtYXJnaW4tdG9wOiAtMTUwcHg7DQp9DQojbWVzc2FnZSB7DQogIHdpZHRoOiAzNTBweDsNCn0NCg=="},{"version":3,"sources":["introEleven.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"introEleven.vue","sourceRoot":"src/components/intros","sourcesContent":["<template>\r\n  <!-- intro-section -->\r\n  <section :style=\"{ backgroundImage: 'url(' + projectBrief.backgroundImageUrl + ')' }\"  id=\"intro-wrap\" class=\"intro-eleven-Wrap text-white  text-center\">\r\n    <v-main class=\"bg-image\">\r\n      <b-container>\r\n          <v-layout>\r\n            <div id=\"avatar-wrap\">\r\n              <v-col class=\"ma-15\">\r\n                <v-btn class=\"mt-0 mr-2\" fab large light :disabled=\"true\" id=\"avatar-button\">\r\n                  <avatar v-if=\"projectBriefCopy.avatarUrl\" alt=\"Avatar\" :src=\"projectBriefCopy.avatarUrl\" :size=\"60\"></avatar>\r\n                  <avatar v-else :username=\"projectBriefCopy.name\" backgroundColor=\"grey\" color=\"white\"  :size=\"60\"></avatar>\r\n                </v-btn>\r\n                <strong v-html=\"projectBriefCopy.author\"></strong>\r\n              </v-col>\r\n            </div>\r\n          </v-layout>\r\n      </b-container>\r\n      <b-container>\r\n        <b-row>\r\n          <b-col sm=\"12\">\r\n            <h1 class=\"intro-eleven-Title font-weight-bold text-42 t-shadow mb-3 text-white\">\r\n              {{projectBriefCopy.name}}\r\n            </h1>\r\n            <div class=\" intro-eleven-Description text-16\">\r\n              <p class=\"mb-4\">\r\n                {{projectBriefCopy.intro}}\r\n              </p>\r\n            </div>\r\n\r\n            <div class=\"intro-eleven-Buttons mb-5\">\r\n              <form onsubmit=\"return false\"\r\n                  class=\"d-flex align-items-center justify-content-center subscription_form m-auto\"\r\n              >\r\n                <div class=\"form-group subscription-input-wrap\">\r\n                  <input\r\n                      type=\"email\"\r\n                      required\r\n                      class=\"form-control email_field\"\r\n                      v-model=\"subscribeForm.email\"\r\n                      aria-describedby=\"emailHelpId\"\r\n                      placeholder=\"Please enter your email\"\r\n                  />\r\n                  <button @click=\"subscribe\" type=\"submit\" class=\"btn btn-submit btn-gradient\">\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <div id=\"message\" v-if=\"showMessage\"\r\n                   class=\"intro-eleven-Description alert alert-dismissible fade show\"\r\n                   role=\"alert\"\r\n              >\r\n                <button type=\"button\" class=\"close\" @click=\"showMessage=false\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <strong>{{displayedMessage}}</strong>\r\n              </div>\r\n              <div class=\"form-group\"></div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n    </v-main>\r\n    <div class=\"overlay\"></div>\r\n  </section>\r\n\r\n  <!-- end::intro-section -->\r\n</template>\r\n\r\n<script>\r\nimport Avatar from 'vue-avatar'\r\nimport axios from \"axios\";\r\nimport {default as API_ENDPOINTS} from \"@/api\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    bodyAttrs: {\r\n      class: [\"landing-gradient-steel-gray\"]\r\n    }\r\n  },\r\n  components: {\r\n    Avatar\r\n  },\r\n  data () {\r\n    return {\r\n      projectBrief: {\r\n        projectId: \"\",\r\n        name: \"\",\r\n        createdAt: \"\",\r\n        interval: \"\",\r\n        lastBroadcastTimeMs: \"\",\r\n        intro: \"\",\r\n        backgroundImageUrl: \"\",\r\n        avatarUrl: \"\",\r\n        outgoingEmail: \"\",\r\n        author: \"\",\r\n      },\r\n      projectBriefCopy: {},\r\n      subscribeForm: {\r\n        email:\"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n      },\r\n      showMessage: false,\r\n      displayedMessage: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    getProjectBrief(projectId) {\r\n      return new Promise((resolve) => {\r\n        axios({url: API_ENDPOINTS.READ_PROJECT_BRIEF(projectId), method: 'GET'})\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.projectBrief = resp.data\r\n              this.projectBriefCopy = this.projectBrief\r\n            })\r\n            .catch(() => {\r\n              //TODO: directs to 404 page\r\n            })\r\n      })\r\n    },\r\n    isEmailValid(email) {\r\n      if (!(/.+@.+\\..+/.test(email))) {\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    subscribe() {\r\n      if (!this.isEmailValid(this.subscribeForm.email)) {\r\n        return\r\n      }\r\n      const data = {projectId: this.projectBrief.projectId, email: this.subscribeForm.email}\r\n      return new Promise((resolve) => {\r\n        axios({url: API_ENDPOINTS.CREATE_SUBSCRIBER, data: data, method: 'POST'})\r\n            .then(resp => {\r\n              resolve(resp)\r\n              this.displayedMessage = \"Subscribed successfully!\"\r\n              this.showMessage = true\r\n              this.subscribeForm.email = \"\"\r\n              this.closeShowMessage()\r\n            })\r\n            .catch(() => {\r\n              this.displayedMessage = \"Failed to subscribe.\"\r\n              this.showMessage = true\r\n              this.closeShowMessage()\r\n            })\r\n      })\r\n    },\r\n    closeShowMessage() {\r\n      setTimeout(() => {\r\n        this.showMessage = false\r\n      }, 6000)\r\n    },\r\n  },\r\n  created() {\r\n    const projectId = \"project-\" + this.$route.params.projectIdShort\r\n    this.getProjectBrief(projectId)\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.bg-image {\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  min-height: 60vh;\r\n}\r\n#avatar-wrap {\r\n  margin-left: -150px;\r\n  margin-bottom: 180px;\r\n  margin-top: -150px;\r\n}\r\n#message {\r\n  width: 350px;\r\n}\r\n</style>"]}]}