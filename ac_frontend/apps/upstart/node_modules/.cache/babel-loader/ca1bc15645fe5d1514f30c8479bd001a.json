{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\client\\user_registry_pb.js","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\client\\user_registry_pb.js","mtime":1621544152844},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/Go/src/alphacare/ac_frontend/apps/admin/src/client/user_registry_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","api","v1","GetUserRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GetUserResponse","CreateUserRequest","CreateUserResponse","LoginUserRequest","LoginUserResponse","Claims","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","userid","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setUserid","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getUserid","length","writeString","setProto3StringField","firstname","lastname","email","userscope","setFirstname","setLastname","setEmail","readInt32","setUserscope","getFirstname","getLastname","getEmail","getUserscope","writeInt32","setProto3IntField","password","resetpassword","getBooleanFieldWithDefault","refreshurl","returnurl","setPassword","readBool","setResetpassword","setRefreshurl","setReturnurl","getPassword","getResetpassword","writeBool","getRefreshurl","getReturnurl","setProto3BooleanField","stripeonboardingurl","stripeonboardingurlexpiresat","stripeaccountid","stripeaccountcreatedat","stripecustomerid","jwttoken","claims","getClaims","setStripeonboardingurl","readInt64","setStripeonboardingurlexpiresat","setStripeaccountid","setStripeaccountcreatedat","setStripecustomerid","setJwttoken","readMessage","setClaims","getStripeonboardingurl","getStripeonboardingurlexpiresat","writeInt64","getStripeaccountid","getStripeaccountcreatedat","getStripecustomerid","getJwttoken","writeMessage","getWrapperField","setWrapperField","clearClaims","hasClaims","getField","exp","iat","setExp","setIat","getExp","getIat","object","extend","exports"],"mappings":"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","sourcesContent":["// source: user_registry.proto\r\n/**\r\n * @fileoverview\r\n * @enhanceable\r\n * @suppress {missingRequire} reports error on implicit type usages.\r\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n *     field starts with 'MSG_' and isn't a translatable message.\r\n * @public\r\n */\r\n// GENERATED CODE -- DO NOT EDIT!\r\n/* eslint-disable */\r\n// @ts-nocheck\r\n\r\nvar jspb = require('google-protobuf');\r\nvar goog = jspb;\r\nvar global = Function('return this')();\r\n\r\ngoog.exportSymbol('proto.api.v1.Claims', null, global);\r\ngoog.exportSymbol('proto.api.v1.CreateUserRequest', null, global);\r\ngoog.exportSymbol('proto.api.v1.CreateUserResponse', null, global);\r\ngoog.exportSymbol('proto.api.v1.GetUserRequest', null, global);\r\ngoog.exportSymbol('proto.api.v1.GetUserResponse', null, global);\r\ngoog.exportSymbol('proto.api.v1.LoginUserRequest', null, global);\r\ngoog.exportSymbol('proto.api.v1.LoginUserResponse', null, global);\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.GetUserRequest = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.GetUserRequest, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.GetUserRequest.displayName = 'proto.api.v1.GetUserRequest';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.GetUserResponse = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.GetUserResponse, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.GetUserResponse.displayName = 'proto.api.v1.GetUserResponse';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.CreateUserRequest = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.CreateUserRequest, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.CreateUserRequest.displayName = 'proto.api.v1.CreateUserRequest';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.CreateUserResponse = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.CreateUserResponse, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.CreateUserResponse.displayName = 'proto.api.v1.CreateUserResponse';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.LoginUserRequest = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.LoginUserRequest, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.LoginUserRequest.displayName = 'proto.api.v1.LoginUserRequest';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.LoginUserResponse = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.LoginUserResponse, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.LoginUserResponse.displayName = 'proto.api.v1.LoginUserResponse';\r\n}\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.api.v1.Claims = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.api.v1.Claims, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  /**\r\n   * @public\r\n   * @override\r\n   */\r\n  proto.api.v1.Claims.displayName = 'proto.api.v1.Claims';\r\n}\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.GetUserRequest.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.GetUserRequest.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.GetUserRequest} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.GetUserRequest.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.GetUserRequest}\r\n */\r\nproto.api.v1.GetUserRequest.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.GetUserRequest;\r\n  return proto.api.v1.GetUserRequest.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.GetUserRequest} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.GetUserRequest}\r\n */\r\nproto.api.v1.GetUserRequest.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUserid(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.GetUserRequest.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.GetUserRequest.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.GetUserRequest} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.GetUserRequest.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getUserid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string userId = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.GetUserRequest.prototype.getUserid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.GetUserRequest} returns this\r\n */\r\nproto.api.v1.GetUserRequest.prototype.setUserid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.GetUserResponse.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.GetUserResponse} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.GetUserResponse.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n    lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n    email: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n    userscope: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.GetUserResponse}\r\n */\r\nproto.api.v1.GetUserResponse.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.GetUserResponse;\r\n  return proto.api.v1.GetUserResponse.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.GetUserResponse} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.GetUserResponse}\r\n */\r\nproto.api.v1.GetUserResponse.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUserid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setFirstname(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setLastname(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setEmail(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {number} */ (reader.readInt32());\r\n      msg.setUserscope(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.GetUserResponse.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.GetUserResponse} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.GetUserResponse.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getUserid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getFirstname();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = message.getLastname();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = message.getEmail();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = message.getUserscope();\r\n  if (f !== 0) {\r\n    writer.writeInt32(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string userId = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.getUserid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.GetUserResponse} returns this\r\n */\r\nproto.api.v1.GetUserResponse.prototype.setUserid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string firstName = 2;\r\n * @return {string}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.getFirstname = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.GetUserResponse} returns this\r\n */\r\nproto.api.v1.GetUserResponse.prototype.setFirstname = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string lastName = 3;\r\n * @return {string}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.getLastname = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.GetUserResponse} returns this\r\n */\r\nproto.api.v1.GetUserResponse.prototype.setLastname = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string email = 4;\r\n * @return {string}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.getEmail = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.GetUserResponse} returns this\r\n */\r\nproto.api.v1.GetUserResponse.prototype.setEmail = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int32 userScope = 5;\r\n * @return {number}\r\n */\r\nproto.api.v1.GetUserResponse.prototype.getUserscope = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.GetUserResponse} returns this\r\n */\r\nproto.api.v1.GetUserResponse.prototype.setUserscope = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 5, value);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.CreateUserRequest.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.CreateUserRequest} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.CreateUserRequest.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    firstname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    lastname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n    resetpassword: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),\r\n    refreshurl: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\r\n    returnurl: jspb.Message.getFieldWithDefault(msg, 7, \"\")\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.CreateUserRequest}\r\n */\r\nproto.api.v1.CreateUserRequest.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.CreateUserRequest;\r\n  return proto.api.v1.CreateUserRequest.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.CreateUserRequest} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.CreateUserRequest}\r\n */\r\nproto.api.v1.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setFirstname(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setLastname(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setEmail(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setPassword(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {boolean} */ (reader.readBool());\r\n      msg.setResetpassword(value);\r\n      break;\r\n    case 6:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRefreshurl(value);\r\n      break;\r\n    case 7:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setReturnurl(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.CreateUserRequest.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.CreateUserRequest} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getFirstname();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getLastname();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = message.getEmail();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = message.getPassword();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = message.getResetpassword();\r\n  if (f) {\r\n    writer.writeBool(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n  f = message.getRefreshurl();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      6,\r\n      f\r\n    );\r\n  }\r\n  f = message.getReturnurl();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      7,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string firstName = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getFirstname = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setFirstname = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string lastName = 2;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getLastname = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setLastname = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string email = 3;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getEmail = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setEmail = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string password = 4;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getPassword = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setPassword = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional bool resetPassword = 5;\r\n * @return {boolean}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getResetpassword = function() {\r\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\r\n};\r\n\r\n\r\n/**\r\n * @param {boolean} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setResetpassword = function(value) {\r\n  return jspb.Message.setProto3BooleanField(this, 5, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string refreshUrl = 6;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getRefreshurl = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setRefreshurl = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 6, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string returnUrl = 7;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.getReturnurl = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserRequest} returns this\r\n */\r\nproto.api.v1.CreateUserRequest.prototype.setReturnurl = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 7, value);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.CreateUserResponse.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.CreateUserResponse} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.CreateUserResponse.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    refreshurl: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n    returnurl: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n    stripeonboardingurl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n    stripeonboardingurlexpiresat: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n    stripeaccountid: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\r\n    stripeaccountcreatedat: jspb.Message.getFieldWithDefault(msg, 7, 0),\r\n    stripecustomerid: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\r\n    jwttoken: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\r\n    claims: (f = msg.getClaims()) && proto.api.v1.Claims.toObject(includeInstance, f)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.CreateUserResponse}\r\n */\r\nproto.api.v1.CreateUserResponse.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.CreateUserResponse;\r\n  return proto.api.v1.CreateUserResponse.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.CreateUserResponse} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.CreateUserResponse}\r\n */\r\nproto.api.v1.CreateUserResponse.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUserid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRefreshurl(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setReturnurl(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStripeonboardingurl(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {number} */ (reader.readInt64());\r\n      msg.setStripeonboardingurlexpiresat(value);\r\n      break;\r\n    case 6:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStripeaccountid(value);\r\n      break;\r\n    case 7:\r\n      var value = /** @type {number} */ (reader.readInt64());\r\n      msg.setStripeaccountcreatedat(value);\r\n      break;\r\n    case 8:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStripecustomerid(value);\r\n      break;\r\n    case 9:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setJwttoken(value);\r\n      break;\r\n    case 10:\r\n      var value = new proto.api.v1.Claims;\r\n      reader.readMessage(value,proto.api.v1.Claims.deserializeBinaryFromReader);\r\n      msg.setClaims(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.CreateUserResponse.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.CreateUserResponse} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.CreateUserResponse.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getUserid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getRefreshurl();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = message.getReturnurl();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = message.getStripeonboardingurl();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = message.getStripeonboardingurlexpiresat();\r\n  if (f !== 0) {\r\n    writer.writeInt64(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n  f = message.getStripeaccountid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      6,\r\n      f\r\n    );\r\n  }\r\n  f = message.getStripeaccountcreatedat();\r\n  if (f !== 0) {\r\n    writer.writeInt64(\r\n      7,\r\n      f\r\n    );\r\n  }\r\n  f = message.getStripecustomerid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      8,\r\n      f\r\n    );\r\n  }\r\n  f = message.getJwttoken();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      9,\r\n      f\r\n    );\r\n  }\r\n  f = message.getClaims();\r\n  if (f != null) {\r\n    writer.writeMessage(\r\n      10,\r\n      f,\r\n      proto.api.v1.Claims.serializeBinaryToWriter\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string userId = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getUserid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setUserid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string refreshUrl = 2;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getRefreshurl = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setRefreshurl = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string returnUrl = 3;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getReturnurl = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setReturnurl = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string stripeOnboardingUrl = 4;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getStripeonboardingurl = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setStripeonboardingurl = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int64 stripeOnboardingUrlExpiresAt = 5;\r\n * @return {number}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getStripeonboardingurlexpiresat = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setStripeonboardingurlexpiresat = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 5, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string stripeAccountId = 6;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getStripeaccountid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setStripeaccountid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 6, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int64 stripeAccountCreatedAt = 7;\r\n * @return {number}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getStripeaccountcreatedat = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setStripeaccountcreatedat = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 7, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string stripeCustomerId = 8;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getStripecustomerid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setStripecustomerid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 8, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string jwtToken = 9;\r\n * @return {string}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getJwttoken = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.setJwttoken = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 9, value);\r\n};\r\n\r\n\r\n/**\r\n * optional Claims claims = 10;\r\n * @return {?proto.api.v1.Claims}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.getClaims = function() {\r\n  return /** @type{?proto.api.v1.Claims} */ (\r\n    jspb.Message.getWrapperField(this, proto.api.v1.Claims, 10));\r\n};\r\n\r\n\r\n/**\r\n * @param {?proto.api.v1.Claims|undefined} value\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n*/\r\nproto.api.v1.CreateUserResponse.prototype.setClaims = function(value) {\r\n  return jspb.Message.setWrapperField(this, 10, value);\r\n};\r\n\r\n\r\n/**\r\n * Clears the message field making it undefined.\r\n * @return {!proto.api.v1.CreateUserResponse} returns this\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.clearClaims = function() {\r\n  return this.setClaims(undefined);\r\n};\r\n\r\n\r\n/**\r\n * Returns whether this field is set.\r\n * @return {boolean}\r\n */\r\nproto.api.v1.CreateUserResponse.prototype.hasClaims = function() {\r\n  return jspb.Message.getField(this, 10) != null;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.LoginUserRequest.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.LoginUserRequest} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.LoginUserRequest.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.LoginUserRequest}\r\n */\r\nproto.api.v1.LoginUserRequest.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.LoginUserRequest;\r\n  return proto.api.v1.LoginUserRequest.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.LoginUserRequest} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.LoginUserRequest}\r\n */\r\nproto.api.v1.LoginUserRequest.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setEmail(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setPassword(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.LoginUserRequest.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.LoginUserRequest} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.LoginUserRequest.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getEmail();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getPassword();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string email = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.getEmail = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.LoginUserRequest} returns this\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.setEmail = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string password = 2;\r\n * @return {string}\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.getPassword = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.LoginUserRequest} returns this\r\n */\r\nproto.api.v1.LoginUserRequest.prototype.setPassword = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 2, value);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.LoginUserResponse.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.LoginUserResponse} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.LoginUserResponse.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    jwttoken: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n    claims: (f = msg.getClaims()) && proto.api.v1.Claims.toObject(includeInstance, f)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.LoginUserResponse}\r\n */\r\nproto.api.v1.LoginUserResponse.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.LoginUserResponse;\r\n  return proto.api.v1.LoginUserResponse.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.LoginUserResponse} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.LoginUserResponse}\r\n */\r\nproto.api.v1.LoginUserResponse.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUserid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setJwttoken(value);\r\n      break;\r\n    case 3:\r\n      var value = new proto.api.v1.Claims;\r\n      reader.readMessage(value,proto.api.v1.Claims.deserializeBinaryFromReader);\r\n      msg.setClaims(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.LoginUserResponse.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.LoginUserResponse} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.LoginUserResponse.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getUserid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getJwttoken();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = message.getClaims();\r\n  if (f != null) {\r\n    writer.writeMessage(\r\n      3,\r\n      f,\r\n      proto.api.v1.Claims.serializeBinaryToWriter\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string userId = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.getUserid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.LoginUserResponse} returns this\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.setUserid = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string jwtToken = 2;\r\n * @return {string}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.getJwttoken = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.LoginUserResponse} returns this\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.setJwttoken = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional Claims claims = 3;\r\n * @return {?proto.api.v1.Claims}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.getClaims = function() {\r\n  return /** @type{?proto.api.v1.Claims} */ (\r\n    jspb.Message.getWrapperField(this, proto.api.v1.Claims, 3));\r\n};\r\n\r\n\r\n/**\r\n * @param {?proto.api.v1.Claims|undefined} value\r\n * @return {!proto.api.v1.LoginUserResponse} returns this\r\n*/\r\nproto.api.v1.LoginUserResponse.prototype.setClaims = function(value) {\r\n  return jspb.Message.setWrapperField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * Clears the message field making it undefined.\r\n * @return {!proto.api.v1.LoginUserResponse} returns this\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.clearClaims = function() {\r\n  return this.setClaims(undefined);\r\n};\r\n\r\n\r\n/**\r\n * Returns whether this field is set.\r\n * @return {boolean}\r\n */\r\nproto.api.v1.LoginUserResponse.prototype.hasClaims = function() {\r\n  return jspb.Message.getField(this, 3) != null;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * Optional fields that are not set will be set to undefined.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\r\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\r\n *     JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.api.v1.Claims.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.api.v1.Claims.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\r\n *     the JSPB instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.api.v1.Claims} msg The msg instance to transform.\r\n * @return {!Object}\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.Claims.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n    userscope: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n    exp: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n    iat: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.api.v1.Claims}\r\n */\r\nproto.api.v1.Claims.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.api.v1.Claims;\r\n  return proto.api.v1.Claims.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.api.v1.Claims} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.api.v1.Claims}\r\n */\r\nproto.api.v1.Claims.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setEmail(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {number} */ (reader.readInt32());\r\n      msg.setUserscope(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {number} */ (reader.readInt64());\r\n      msg.setExp(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {number} */ (reader.readInt64());\r\n      msg.setIat(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.api.v1.Claims.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  proto.api.v1.Claims.serializeBinaryToWriter(this, writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the given message to binary data (in protobuf wire\r\n * format), writing to the given BinaryWriter.\r\n * @param {!proto.api.v1.Claims} message\r\n * @param {!jspb.BinaryWriter} writer\r\n * @suppress {unusedLocalVariables} f is only used for nested messages\r\n */\r\nproto.api.v1.Claims.serializeBinaryToWriter = function(message, writer) {\r\n  var f = undefined;\r\n  f = message.getEmail();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = message.getUserscope();\r\n  if (f !== 0) {\r\n    writer.writeInt32(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = message.getExp();\r\n  if (f !== 0) {\r\n    writer.writeInt64(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = message.getIat();\r\n  if (f !== 0) {\r\n    writer.writeInt64(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * optional string email = 1;\r\n * @return {string}\r\n */\r\nproto.api.v1.Claims.prototype.getEmail = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n};\r\n\r\n\r\n/**\r\n * @param {string} value\r\n * @return {!proto.api.v1.Claims} returns this\r\n */\r\nproto.api.v1.Claims.prototype.setEmail = function(value) {\r\n  return jspb.Message.setProto3StringField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int32 userScope = 2;\r\n * @return {number}\r\n */\r\nproto.api.v1.Claims.prototype.getUserscope = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.Claims} returns this\r\n */\r\nproto.api.v1.Claims.prototype.setUserscope = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int64 exp = 3;\r\n * @return {number}\r\n */\r\nproto.api.v1.Claims.prototype.getExp = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.Claims} returns this\r\n */\r\nproto.api.v1.Claims.prototype.setExp = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional int64 iat = 4;\r\n * @return {number}\r\n */\r\nproto.api.v1.Claims.prototype.getIat = function() {\r\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} value\r\n * @return {!proto.api.v1.Claims} returns this\r\n */\r\nproto.api.v1.Claims.prototype.setIat = function(value) {\r\n  return jspb.Message.setProto3IntField(this, 4, value);\r\n};\r\n\r\n\r\ngoog.object.extend(exports, proto.api.v1);\r\n"]}]}