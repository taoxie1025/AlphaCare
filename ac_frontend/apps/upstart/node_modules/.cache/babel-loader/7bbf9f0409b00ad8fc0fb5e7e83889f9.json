{"remainingRequest":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\client\\user_registry_pb.js","dependencies":[{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\src\\client\\user_registry_pb.js","mtime":1621489625661},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Go\\src\\alphacare\\ac_frontend\\apps\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/Go/src/alphacare/ac_frontend/apps/admin/src/client/user_registry_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","api","v1","GetUserRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GetUserResponse","CreateUserRequest","CreateUserResponse","LoginUserRequest","LoginUserResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","userid","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setUserid","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getUserid","length","writeString","setProto3StringField","firstname","lastname","email","userscope","setFirstname","setLastname","setEmail","readInt32","setUserscope","getFirstname","getLastname","getEmail","getUserscope","writeInt32","setProto3IntField","password","resetpassword","getBooleanFieldWithDefault","refreshurl","returnurl","setPassword","readBool","setResetpassword","setRefreshurl","setReturnurl","getPassword","getResetpassword","writeBool","getRefreshurl","getReturnurl","setProto3BooleanField","stripeonboardingurl","stripeonboardingurlexpiresat","stripeaccountid","stripeaccountcreatedat","stripecustomerid","setStripeonboardingurl","readInt64","setStripeonboardingurlexpiresat","setStripeaccountid","setStripeaccountcreatedat","setStripecustomerid","getStripeonboardingurl","getStripeonboardingurlexpiresat","writeInt64","getStripeaccountid","getStripeaccountcreatedat","getStripecustomerid","jwttoken","setJwttoken","getJwttoken","object","extend","exports"],"mappings":"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","sourcesContent":["// source: user_registry.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.api.v1.CreateUserRequest', null, global);\ngoog.exportSymbol('proto.api.v1.CreateUserResponse', null, global);\ngoog.exportSymbol('proto.api.v1.GetUserRequest', null, global);\ngoog.exportSymbol('proto.api.v1.GetUserResponse', null, global);\ngoog.exportSymbol('proto.api.v1.LoginUserRequest', null, global);\ngoog.exportSymbol('proto.api.v1.LoginUserResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.GetUserRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.GetUserRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.GetUserRequest.displayName = 'proto.api.v1.GetUserRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.GetUserResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.GetUserResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.GetUserResponse.displayName = 'proto.api.v1.GetUserResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.CreateUserRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.CreateUserRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.CreateUserRequest.displayName = 'proto.api.v1.CreateUserRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.CreateUserResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.CreateUserResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.CreateUserResponse.displayName = 'proto.api.v1.CreateUserResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.LoginUserRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.LoginUserRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.LoginUserRequest.displayName = 'proto.api.v1.LoginUserRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.api.v1.LoginUserResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.api.v1.LoginUserResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.api.v1.LoginUserResponse.displayName = 'proto.api.v1.LoginUserResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.GetUserRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.GetUserRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.GetUserRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.GetUserRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.GetUserRequest}\n */\nproto.api.v1.GetUserRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.GetUserRequest;\n  return proto.api.v1.GetUserRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.GetUserRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.GetUserRequest}\n */\nproto.api.v1.GetUserRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.GetUserRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.GetUserRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.GetUserRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.GetUserRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.api.v1.GetUserRequest.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.GetUserRequest} returns this\n */\nproto.api.v1.GetUserRequest.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.GetUserResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.GetUserResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.GetUserResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.GetUserResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    userscope: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.GetUserResponse}\n */\nproto.api.v1.GetUserResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.GetUserResponse;\n  return proto.api.v1.GetUserResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.GetUserResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.GetUserResponse}\n */\nproto.api.v1.GetUserResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserscope(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.GetUserResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.GetUserResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.GetUserResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.GetUserResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getUserscope();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.api.v1.GetUserResponse.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.GetUserResponse} returns this\n */\nproto.api.v1.GetUserResponse.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string firstName = 2;\n * @return {string}\n */\nproto.api.v1.GetUserResponse.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.GetUserResponse} returns this\n */\nproto.api.v1.GetUserResponse.prototype.setFirstname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string lastName = 3;\n * @return {string}\n */\nproto.api.v1.GetUserResponse.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.GetUserResponse} returns this\n */\nproto.api.v1.GetUserResponse.prototype.setLastname = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string email = 4;\n * @return {string}\n */\nproto.api.v1.GetUserResponse.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.GetUserResponse} returns this\n */\nproto.api.v1.GetUserResponse.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 userScope = 5;\n * @return {number}\n */\nproto.api.v1.GetUserResponse.prototype.getUserscope = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.v1.GetUserResponse} returns this\n */\nproto.api.v1.GetUserResponse.prototype.setUserscope = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.CreateUserRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.CreateUserRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.CreateUserRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    firstname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    lastname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    resetpassword: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),\n    refreshurl: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    returnurl: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.CreateUserRequest}\n */\nproto.api.v1.CreateUserRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.CreateUserRequest;\n  return proto.api.v1.CreateUserRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.CreateUserRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.CreateUserRequest}\n */\nproto.api.v1.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setResetpassword(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRefreshurl(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReturnurl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.CreateUserRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.CreateUserRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.CreateUserRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getResetpassword();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getRefreshurl();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getReturnurl();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string firstName = 1;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setFirstname = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string lastName = 2;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setLastname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string email = 3;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional bool resetPassword = 5;\n * @return {boolean}\n */\nproto.api.v1.CreateUserRequest.prototype.getResetpassword = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setResetpassword = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional string refreshUrl = 6;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getRefreshurl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setRefreshurl = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string returnUrl = 7;\n * @return {string}\n */\nproto.api.v1.CreateUserRequest.prototype.getReturnurl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserRequest} returns this\n */\nproto.api.v1.CreateUserRequest.prototype.setReturnurl = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.CreateUserResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.CreateUserResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.CreateUserResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.CreateUserResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    refreshurl: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    returnurl: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    stripeonboardingurl: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    stripeonboardingurlexpiresat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    stripeaccountid: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    stripeaccountcreatedat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    stripecustomerid: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.CreateUserResponse}\n */\nproto.api.v1.CreateUserResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.CreateUserResponse;\n  return proto.api.v1.CreateUserResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.CreateUserResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.CreateUserResponse}\n */\nproto.api.v1.CreateUserResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRefreshurl(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReturnurl(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStripeonboardingurl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStripeonboardingurlexpiresat(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStripeaccountid(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStripeaccountcreatedat(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStripecustomerid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.CreateUserResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.CreateUserResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.CreateUserResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.CreateUserResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRefreshurl();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReturnurl();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStripeonboardingurl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getStripeonboardingurlexpiresat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getStripeaccountid();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getStripeaccountcreatedat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getStripecustomerid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string refreshUrl = 2;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getRefreshurl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setRefreshurl = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string returnUrl = 3;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getReturnurl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setReturnurl = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string stripeOnboardingUrl = 4;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getStripeonboardingurl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setStripeonboardingurl = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 stripeOnboardingUrlExpiresAt = 5;\n * @return {number}\n */\nproto.api.v1.CreateUserResponse.prototype.getStripeonboardingurlexpiresat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setStripeonboardingurlexpiresat = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional string stripeAccountId = 6;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getStripeaccountid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setStripeaccountid = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional int64 stripeAccountCreatedAt = 7;\n * @return {number}\n */\nproto.api.v1.CreateUserResponse.prototype.getStripeaccountcreatedat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setStripeaccountcreatedat = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional string stripeCustomerId = 8;\n * @return {string}\n */\nproto.api.v1.CreateUserResponse.prototype.getStripecustomerid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.CreateUserResponse} returns this\n */\nproto.api.v1.CreateUserResponse.prototype.setStripecustomerid = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.LoginUserRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.LoginUserRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.LoginUserRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.LoginUserRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.LoginUserRequest}\n */\nproto.api.v1.LoginUserRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.LoginUserRequest;\n  return proto.api.v1.LoginUserRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.LoginUserRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.LoginUserRequest}\n */\nproto.api.v1.LoginUserRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.LoginUserRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.LoginUserRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.LoginUserRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.LoginUserRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.api.v1.LoginUserRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.LoginUserRequest} returns this\n */\nproto.api.v1.LoginUserRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.api.v1.LoginUserRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.LoginUserRequest} returns this\n */\nproto.api.v1.LoginUserRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.api.v1.LoginUserResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.api.v1.LoginUserResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.api.v1.LoginUserResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.LoginUserResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    jwttoken: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.api.v1.LoginUserResponse}\n */\nproto.api.v1.LoginUserResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.api.v1.LoginUserResponse;\n  return proto.api.v1.LoginUserResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.api.v1.LoginUserResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.api.v1.LoginUserResponse}\n */\nproto.api.v1.LoginUserResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJwttoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.api.v1.LoginUserResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.api.v1.LoginUserResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.api.v1.LoginUserResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.api.v1.LoginUserResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getJwttoken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.api.v1.LoginUserResponse.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.LoginUserResponse} returns this\n */\nproto.api.v1.LoginUserResponse.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string jwtToken = 2;\n * @return {string}\n */\nproto.api.v1.LoginUserResponse.prototype.getJwttoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.api.v1.LoginUserResponse} returns this\n */\nproto.api.v1.LoginUserResponse.prototype.setJwttoken = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.api.v1);\n"]}]}